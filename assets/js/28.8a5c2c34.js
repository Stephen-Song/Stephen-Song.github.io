(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{469:function(v,_,t){"use strict";t.r(_);var e=t(26),s=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"介绍一下什么是xss"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍一下什么是xss"}},[v._v("#")]),v._v(" 介绍一下什么是"),t("code",[v._v("xss")]),v._v(" "),t("badge",{attrs:{text:"特别重要",type:"error"}})],1),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("概念：")]),v._v(" "),t("p",[t("code",[v._v("xss")]),v._v("是跨站脚本攻击，是一种代码注入攻击，攻击者通过，攻击者通过网站注入恶意脚本，使之在用户的浏览器上运行，进而盗取用户的信息如"),t("code",[v._v("cookies")]),v._v("等")])]),v._v(" "),t("p",[t("strong",[t("mark",[v._v("本质：")])])]),v._v(" "),t("p",[v._v("网站对恶意代码进行过滤，与正常的代码混合在一起，浏览器无法分辨哪些是可信的，导致恶意代码执行")]),v._v(" "),t("p",[t("strong",[t("mark",[v._v("方式:")])])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("获取页面的数据，如"),t("code",[v._v("DOM")]),v._v(" "),t("code",[v._v("cookies")]),v._v(" "),t("code",[v._v("localstorge")])])]),v._v(" "),t("li",[t("p",[t("code",[v._v("dos")]),v._v("攻击 发送合理请求 占用服务器资源，使得服务器无法访问服务器")])]),v._v(" "),t("li",[t("p",[v._v("破坏页面结构")])]),v._v(" "),t("li",[t("p",[v._v("流量劫持(将链接指向某网络)")])])]),v._v(" "),t("p",[t("strong",[t("mark",[v._v("攻击类型")])])]),v._v(" "),t("p",[t("code",[v._v("xss")]),v._v("可分为"),t("code",[v._v("存储型")]),v._v(" "),t("code",[v._v("反射型")]),v._v(" "),t("code",[v._v("DOM型")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("存储型指恶意脚本会存储到目标服务器上，当浏览器请求数据，脚本从服务器传回并执行")])]),v._v(" "),t("li",[t("p",[v._v("反射型指的是攻击者诱导用户访问一个带有恶意的代码的"),t("code",[v._v("URL")]),v._v("后，服务端接收数据后处理，把带有恶意代码发送到浏览器端，浏览器端解析这段"),t("code",[v._v("xss")]),v._v("代码的数据当做脚本执行，最终完成"),t("code",[v._v("xss")]),v._v("攻击")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("dom")]),v._v("型指的是修改页面的"),t("code",[v._v("dom")]),v._v("节点形成的"),t("code",[v._v("xss")])])])]),v._v(" "),t("p",[t("strong",[v._v("存储"),t("code",[v._v("xss")]),v._v("攻击步骤")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("攻击者将恶意代码提交到目标网站的数据库")])]),v._v(" "),t("li",[t("p",[v._v("用户打开目标网站，网站服务端从数据库中取出，拼接在"),t("code",[v._v("html")]),v._v("中返回给浏览器")])]),v._v(" "),t("li",[t("p",[v._v("用户浏览器接收到响应后解析执行，混在其中的恶意代码被执行")])]),v._v(" "),t("li",[t("p",[v._v("恶意代码窃取用户数据并发送到攻击者网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定操作")])])]),v._v(" "),t("p",[v._v("多用于带有用户保存数据的网站功能，如"),t("strong",[v._v("论坛发帖")]),v._v(" "),t("strong",[v._v("商品评论")]),v._v(" "),t("strong",[v._v("用户私信")])]),v._v(" "),t("p",[t("strong",[v._v("反射性"),t("code",[v._v("xss")]),v._v("攻击步骤")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("攻击者构造出特殊"),t("code",[v._v("URL")]),v._v("，包含恶意代码")])]),v._v(" "),t("li",[t("p",[v._v("用户打开这个"),t("code",[v._v("URL")]),v._v("，网站服务端将恶意代码从"),t("code",[v._v("URL")]),v._v("中取出，拼接在"),t("code",[v._v("HTML")]),v._v("中返回给浏览器")])]),v._v(" "),t("li",[t("p",[v._v("用户浏览器接收到响应后解析执行，恶意代码也被执行")])]),v._v(" "),t("li",[t("p",[v._v("恶意代码窃取用户数据并发送到攻击者网站，或冒充用户")])])]),v._v(" "),t("p",[v._v("反射型漏洞常见于通过"),t("code",[v._v("URL")]),v._v("传递参数，如网站的搜索，跳转等，由于用户需要主动打开恶意的"),t("code",[v._v("URL")]),v._v("才能生效，攻击者会结合多种手段诱导点击(例如诱导用户点击电子邮件的链接)")]),v._v(" "),t("p",[t("strong",[v._v("反射型和存储型主要区别是：反射型恶意代码存储在"),t("code",[v._v("URL")]),v._v("中，存储型恶意代码存储在数据库中")])]),v._v(" "),t("p",[t("strong",[t("code",[v._v("dom")]),v._v("型"),t("code",[v._v("xss")]),v._v("攻击步骤")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("构造特殊的"),t("code",[v._v("URL")]),v._v("，包含恶意代码")])]),v._v(" "),t("li",[t("p",[v._v("用户打开这个"),t("code",[v._v("URL")])])]),v._v(" "),t("li",[t("p",[v._v("用户浏览器接收到响应后解析执行，前端"),t("code",[v._v("js")]),v._v("取出"),t("code",[v._v("URL")]),v._v("中的恶意代码并执行")])]),v._v(" "),t("li",[t("p",[v._v("恶意代码窃取用户数据并发送到攻击者网站，或冒充用户")])])]),v._v(" "),t("p",[t("code",[v._v("dom")]),v._v("和反射型的区别是反射型是他"),t("strong",[v._v("点击了一个链接")]),v._v("然后他在"),t("strong",[v._v("服务端拦截")]),v._v("然后操作你的信息或让你跳转到某个页面去，而"),t("code",[v._v("dom")]),v._v("型就是"),t("strong",[v._v("控制你的"),t("code",[v._v("dom")])]),v._v("，当你"),t("strong",[v._v("点击之后")]),v._v("他会弹出信息或者操作你的信息或者在页面中嵌入插入一个链接，其地址为用户输入的内容")]),v._v(" "),t("h2",{attrs:{id:"如何防范xss攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何防范xss攻击"}},[v._v("#")]),v._v(" 如何防范"),t("code",[v._v("xss")]),v._v("攻击"),t("badge",{attrs:{text:"特别重要",type:"error"}})],1),v._v(" "),t("ul",[t("li",[t("p",[v._v("不使用服务端渲染，或者严格定义"),t("code",[v._v("Content-Type: application/json")]),v._v(",对插入到"),t("code",[v._v("html")]),v._v("中的代码充分转义")])]),v._v(" "),t("li",[t("p",[v._v("使用"),t("code",[v._v("csp")]),v._v("，意思就是建立一个白名单，告诉浏览器哪些外部资源是可以加载执行的，防止恶意代码的注入")]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("CSP")]),v._v("指的是内容安全策略，它的本质是建立一个白名单，告诉浏览器哪些外部资源可以加载和执行。我们只需要配置规则，如何拦截由浏览器自己来实现。通常有两种方式来开启 "),t("code",[v._v("CSP")]),v._v("，一种是设置 "),t("code",[v._v("HTTP")]),v._v("首部中的 "),t("code",[v._v("Content-Security-Policy")]),v._v("，一种是设置 "),t("code",[v._v("meta")]),v._v(" 标签的方式")])]),v._v(" "),t("li",[t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("<")]),v._v("meta")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[v._v("http-equiv")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[v._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v('"')]),v._v("Content-Security-Policy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v('"')])]),v._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[v._v("content")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[v._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v('"')]),v._v("script-src "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("'")]),v._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("'")]),v._v("; object-src "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("'")]),v._v("none"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("'")]),v._v("; style-src cdn.example.org third-party.org; child-src https:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(">")])]),v._v("\n// 脚本：只信任当前域名\n// "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("<")]),v._v("object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(">")])]),v._v("标签：不信任任何URL，即不加载任何资源\n// 样式表：只信任cdn.example.org和third-party.org\n// 框架（frame）：必须使用HTTPS协议加载\n// 其他资源：没有限制\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br")])])])])]),v._v(" "),t("li",[t("p",[v._v("对一些敏感信息进行保护，比如"),t("code",[v._v("cookies")]),v._v("使用"),t("code",[v._v("http-only")]),v._v("，使得脚本无法获得，也可以使用验证码，避免脚本伪装成用户进行操作")])]),v._v(" "),t("li",[t("p",[v._v("如果服务端被黑了，返回一串恶意执行的代码，可以将执行的代码转发到服务端进行校验"),t("code",[v._v("JSONP")]),v._v("内容校验，再返回校验结果")])])]),v._v(" "),t("h2",{attrs:{id:"介绍一下什么是csrf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍一下什么是csrf"}},[v._v("#")]),v._v(" 介绍一下什么是"),t("code",[v._v("CSRF")]),v._v(" "),t("badge",{attrs:{text:"特别重要",type:"error"}})],1),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("概念：")]),v._v(" "),t("p",[v._v("指的是跨站请求伪造攻击，攻击者诱导用户进入第三方网站，然后该网站向被攻击网站发送跨站请求，如果用户在被攻击的网站保存了登录状态，那么攻击者就可以利用这个登录状态来冒充用户向原有网站发出请求了")])]),v._v(" "),t("p",[t("strong",[t("mark",[v._v("本质：")])])]),v._v(" "),t("p",[v._v("利用"),t("code",[v._v("cookies")]),v._v("会在同源请求中携带发送给服务器的特点来实现用户的冒充")]),v._v(" "),t("p",[t("strong",[t("mark",[v._v("攻击类型：")])])]),v._v(" "),t("p",[t("code",[v._v("get")]),v._v("类型的"),t("code",[v._v("csrf")]),v._v("攻击：在网站的"),t("code",[v._v("img")]),v._v("标签构建一个请求，当用户打开这个网站就自动发起请求")]),v._v(" "),t("p",[t("code",[v._v("post")]),v._v("类型的：构建一个表单，隐藏他，当用户进入页面的时候自动提交这个表单")]),v._v(" "),t("p",[v._v("链接类型的"),t("code",[v._v("csrf")]),v._v("：在"),t("code",[v._v("a")]),v._v("标签里面构建一个请求，诱导用户去点击")]),v._v(" "),t("h2",{attrs:{id:"如何防范csrf攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何防范csrf攻击"}},[v._v("#")]),v._v(" 如何防范"),t("code",[v._v("csrf")]),v._v("攻击"),t("badge",{attrs:{text:"特别重要",type:"error"}})],1),v._v(" "),t("ul",[t("li",[t("strong",[v._v("进行同源检测")]),v._v("，服务器根据 "),t("code",[v._v("http")]),v._v(" 请求头中 "),t("code",[v._v("origin")]),v._v(" 或者 "),t("code",[v._v("referer")]),v._v(" 信息来判断请求是否为允许访问的站点，从而对请求进行过滤。当 "),t("code",[v._v("origin")]),v._v(" 或者 "),t("code",[v._v("referer")]),v._v(" 信息都不存在的时候，直接阻止请求。这种方式的缺点是有些情况下 "),t("code",[v._v("referer")]),v._v(" 可以被伪造，同时还会把搜索引擎的链接也给屏蔽了。所以一般网站会允许搜索引擎的页面请求，但是相应的页面请求这种请求方式也可能被攻击者给利用。（"),t("code",[v._v("Referer")]),v._v(" 字段会告诉服务器该网页是从哪个页面链接过来的）")])]),v._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[v._v("为什么会出现referer和origin两个类似的请求头呢")]),v._v(" "),t("p",[t("code",[v._v("referer")]),v._v("显示来源页面的完整地址，而"),t("code",[v._v("origin")]),v._v("显示来源页面的"),t("code",[v._v("origin: protocal+host")]),v._v("，不包含路径等信息，也就不会包含含有用户信息的敏感内容")])]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("使用 "),t("code",[v._v("CSRF Token")]),v._v(" 进行验证")]),v._v("，服务器向用户返回一个随机数"),t("code",[v._v("Token")]),v._v(" ，当网站再次发起请求时，在请求参数中加入服务器端返回的 "),t("code",[v._v("token")]),v._v(" ，然后服务器对这个 "),t("code",[v._v("token")]),v._v(" 进行验证。这种方法解决了使用 "),t("code",[v._v("cookie")]),v._v(" 单一验证方式时，可能会被冒用的问题，但是这种方法存在一个缺点就是，我们需要给网站中的所有请求都添加上这个 "),t("code",[v._v("token")]),v._v("，操作比较繁琐。还有一个问题是一般不会只有一台网站服务器，如果请求经过负载平衡转移到了其他的服务器，但是这个服务器的 "),t("code",[v._v("session")]),v._v(" 中没有保留这个 "),t("code",[v._v("token")]),v._v(" 的话，就没有办法验证了。这种情况可以通过改变 "),t("code",[v._v("token")]),v._v(" 的构建方式来解决。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("对 "),t("code",[v._v("Cookie")]),v._v(" 进行双重验证")]),v._v("，服务器在用户访问网站页面时，向请求域名注入一个"),t("code",[v._v("Cookie")]),v._v("，内容为随机字符串，然后当用户再次向服务器发送请求的时候，从 "),t("code",[v._v("cookie")]),v._v(" 中取出这个字符串，添加到 "),t("code",[v._v("URL")]),v._v(" 参数中，然后服务器通过对 "),t("code",[v._v("cookie")]),v._v(" 中的数据和参数中的数据进行比较，来进行验证。使用这种方式是利用了攻击者只能利用 "),t("code",[v._v("cookie")]),v._v("，但是不能访问获取 "),t("code",[v._v("cookie")]),v._v(" 的特点。并且这种方法比 "),t("code",[v._v("CSRF Token")]),v._v(" 的方法更加方便，并且不涉及到分布式访问的问题。这种方法的缺点是如果网站存在 "),t("code",[v._v("XSS")]),v._v(" 漏洞的，那么这种方式会失效。同时这种方式"),t("strong",[v._v("不能做到子域名的隔离。")])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("在设置 "),t("code",[v._v("cookie")]),v._v(" 属性的时候设置 "),t("code",[v._v("Samesite")]),v._v(" ，限制 "),t("code",[v._v("cookie")]),v._v(" 不能作为被第三方使用")]),v._v("，从而可以避免被攻击者利用。")])])]),v._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[v._v("samesite的几种形式")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("code",[v._v("strict")])]),v._v(" "),t("th",{staticStyle:{"text-align":"center"}},[t("code",[v._v("lax")])]),v._v(" "),t("th",[t("code",[v._v("None")])])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("完全禁止第三方"),t("code",[v._v("cookies")])]),v._v(" "),t("td",{staticStyle:{"text-align":"center"}},[v._v("大多数情况下不发送"),t("code",[v._v("cookies")]),v._v("，像"),t("code",[v._v("img")]),v._v("的"),t("code",[v._v("src")]),v._v(" "),t("code",[v._v("post")]),v._v("请求等都不发送"),t("code",[v._v("cookies")])]),v._v(" "),t("td",[v._v("发送"),t("code",[v._v("cookies")])])]),v._v(" "),t("tr",[t("td"),v._v(" "),t("td",{staticStyle:{"text-align":"center"}},[v._v("链接"),t("code",[v._v('<a href="..."></a>')])]),v._v(" "),t("td",[v._v("当且仅当开启"),t("code",[v._v("secure")]),v._v("模式")])]),v._v(" "),t("tr",[t("td"),v._v(" "),t("td",{staticStyle:{"text-align":"center"}},[t("code",[v._v("get")]),v._v("表单"),t("code",[v._v('<form method="GET" action="...">')])]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td"),v._v(" "),t("td",{staticStyle:{"text-align":"center"}},[v._v("预加载"),t("code",[v._v('<link rel="prerender" href="..."/>')])]),v._v(" "),t("td")])])])]),v._v(" "),t("h2",{attrs:{id:"介绍一下什么是中间人攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍一下什么是中间人攻击"}},[v._v("#")]),v._v(" 介绍一下什么是中间人攻击"),t("badge",{attrs:{text:"特别重要",type:"error"}})],1),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("概念")]),v._v(" "),t("p",[v._v("中间人攻击是指攻击者在"),t("strong",[v._v("通讯两端")]),v._v("分别创立的联系，并交换其收到的数据，是通讯两端认为他们正在一个私密的连接与对方直接对话，但是"),t("strong",[v._v("事实上整个会话都被攻击者完全控制")]),v._v("，在中间人攻击中，攻击者可以拦截通讯对方的内容"),t("strong",[v._v("进行篡改或插入新内容")])])]),v._v(" "),t("p",[v._v("攻击过程：")]),v._v(" "),t("ul",[t("li",[v._v("客户端发请求到服务端，请求被中间人截获")]),v._v(" "),t("li",[v._v("服务器向客户端发送公钥")]),v._v(" "),t("li",[v._v("中间人获取公钥，保留在自己手中，给客户端发送中间人自己伪造的公钥")]),v._v(" "),t("li",[v._v("客户端收到伪造的公钥，生成加密"),t("code",[v._v("hash")]),v._v("发给服务器")]),v._v(" "),t("li",[v._v("中间人截获加密"),t("code",[v._v("hash")]),v._v("，用自己的私钥解密获得真正的密钥，同时生成假的加密"),t("code",[v._v("hash")]),v._v("发送给服务器")]),v._v(" "),t("li",[v._v("服务器用私钥解密获得假密钥，然后加密数据传输给客户端")])]),v._v(" "),t("h2",{attrs:{id:"介绍一下sql注入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍一下sql注入"}},[v._v("#")]),v._v(" 介绍一下"),t("code",[v._v("sql")]),v._v("注入"),t("badge",{attrs:{text:"重要",type:"warning"}})],1),v._v(" "),t("p",[t("code",[v._v("SQL")]),v._v("注入是一种非常常见的数据库攻击手段，也是网络世界中最普遍的漏洞之一，它其实就是黑客在表单中填写包含 "),t("code",[v._v("SQL")]),v._v(" 关键字的数据，表单数据提交给服务器时让数据库执行恶意 "),t("code",[v._v("SQL")]),v._v(" 的过程。")]),v._v(" "),t("p",[v._v("例如 "),t("code",[v._v("' OR '1'='1")]),v._v(" ，当我们输如用户名 "),t("code",[v._v("admin")]),v._v(" ，然后密码输如 "),t("code",[v._v("' OR '1'=1='1")]),v._v(" 的时候，我们在查询用户名和密码是否正确的时候")]),v._v(" "),t("p",[v._v("本来要执行的是 "),t("code",[v._v("SELECT * FROM user WHERE username='' and password=''")])]),v._v(" "),t("p",[v._v("经过参数拼接后，会执行 "),t("code",[v._v("SQL")]),v._v("语句 "),t("code",[v._v("SELECT * FROM user WHERE username='' and password='' OR '1'='1'")]),v._v(" ，这个时候"),t("code",[v._v("1=1")]),v._v("是成立，自然就跳过验证了。")]),v._v(" "),t("h2",{attrs:{id:"如何防止-sql-注入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何防止-sql-注入"}},[v._v("#")]),v._v(" 如何防止 "),t("code",[v._v("SQL")]),v._v(" 注入"),t("badge",{attrs:{text:"重要",type:"warning"}})],1),v._v(" "),t("p",[v._v("主要是后端进行对 "),t("code",[v._v("SQL")]),v._v(" 注入攻击的防护，常见的防护机制有：")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("使用 "),t("code",[v._v("preparestatement")]),v._v(" 预编译机制：")]),v._v(" 在"),t("code",[v._v("sql")]),v._v("语句执行前，对其进行语法分析、编译和优化，其中参数位置使用占位符 "),t("code",[v._v("?")]),v._v(" 代替了。当真正运行时，传过来的参数会被看作是一个纯文本，不会重新编译，不会被当做"),t("code",[v._v("sql")]),v._v("指令")]),v._v(" "),t("li",[t("strong",[v._v("特殊字符转义：")]),v._v(" 些特殊字符，比如："),t("code",[v._v("%")]),v._v("作为"),t("code",[v._v("like")]),v._v("语句中的参数时，要对其进行转义处理")]),v._v(" "),t("li",[t("strong",[v._v("使用代码检测工具：")]),v._v(" 使用"),t("code",[v._v("sqlMap")]),v._v("等代码检测工具，它能检测"),t("code",[v._v("sql")]),v._v("注入漏洞")]),v._v(" "),t("li",[v._v("数据库账号增加权限控制、数据库异常监控等等")])]),v._v(" "),t("h2",{attrs:{id:"介绍一下ddos-攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍一下ddos-攻击"}},[v._v("#")]),v._v(" 介绍一下"),t("code",[v._v("DDoS")]),v._v(" 攻击"),t("badge",{attrs:{text:"重要",type:"warning"}})],1),v._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[v._v("Dos 拒绝服务攻击（Denial of Service attack）")]),v._v(" "),t("p",[v._v("是一种能够让服务器呈现静止状态的攻击方式。其原理就是发送大量的合法请求到服务器，服务器无法分辨这些请求是正常请求还是攻击请求，所以会照单全收。海量的请求造成服务器进入停止工作或拒绝服务的状态。")])]),v._v(" "),t("p",[t("code",[v._v("DDoS")]),v._v("：分布式拒绝服务攻击"),t("code",[v._v("（Distributed Denial of Service）")]),v._v("，"),t("code",[v._v("DDos")]),v._v("攻击是在 "),t("code",[v._v("DOS")]),v._v(" 攻击基础上的，可以通俗理解，"),t("code",[v._v("dos")]),v._v(" 是单挑，而 "),t("code",[v._v("ddos")]),v._v(" 是群殴，因为现代技术的发展，"),t("code",[v._v("dos")]),v._v("攻击的杀伤力降低，所以出现了"),t("code",[v._v("DDOS")]),v._v("，攻击者借助公共网络，将大数量的计算机设备联合起来，向一个或多个目标进行攻击")]),v._v(" "),t("h2",{attrs:{id:"介绍一下上传文件攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍一下上传文件攻击"}},[v._v("#")]),v._v(" 介绍一下上传文件攻击")]),v._v(" "),t("p",[v._v("如果 "),t("code",[v._v("web")]),v._v(" 网站没有对文件类型进行严格的校验，导致可执行文件被恶意上传到了服务器，恶意脚本就会执行")]),v._v(" "),t("h2",{attrs:{id:"如何防止上传文件攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何防止上传文件攻击"}},[v._v("#")]),v._v(" 如何防止上传文件攻击")]),v._v(" "),t("ul",[t("li",[v._v("文件上传后放到独立的存储上，做静态文件处理，杜绝脚本执行的可能")]),v._v(" "),t("li",[v._v("对上传文件类型进行白名单校验")]),v._v(" "),t("li",[v._v("使用随机数改写文件名和文件路径等等")])]),v._v(" "),t("h2",{attrs:{id:"介绍一下有哪些可能造成前端安全问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍一下有哪些可能造成前端安全问题"}},[v._v("#")]),v._v(" 介绍一下有哪些可能造成前端安全问题")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("跨站攻击脚本")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("iframe")]),v._v("的滥用："),t("code",[v._v("iframe")]),v._v("中的内容是由第三方提供的，默认不受控制，可以在"),t("code",[v._v("iframe")]),v._v("上运行"),t("code",[v._v("js")]),v._v("脚本，"),t("code",[v._v("flash")]),v._v("脚本弹出对话框等破坏前端用户体验")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("csrf")])])]),v._v(" "),t("li",[t("p",[v._v("恶意第三方库")])])]),v._v(" "),t("h2",{attrs:{id:"网络劫持有哪几种-如何防范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络劫持有哪几种-如何防范"}},[v._v("#")]),v._v(" 网络劫持有哪几种，如何防范"),t("badge",{attrs:{text:"重要",type:"warning"}})],1),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("DNS")]),v._v("劫持：输入"),t("code",[v._v("jd.com")]),v._v("强制跳转到"),t("code",[v._v("taobao.com")]),v._v("属于"),t("code",[v._v("dns")]),v._v("劫持")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("dns")]),v._v("强制解析：通过修改运营商的本地"),t("code",[v._v("dns")]),v._v("记录，来引导用户流量到缓存服务器")]),v._v(" "),t("li",[t("code",[v._v("302")]),v._v("跳转：通过监控网络出口的流量，分析判断哪些内容是可以进行劫持处理的，再对劫持的内存发起"),t("code",[v._v("302")]),v._v("跳转的回复，引导用户获得内容")])])]),v._v(" "),t("li",[t("p",[t("code",[v._v("HTTP")]),v._v("劫持：访问"),t("code",[v._v("google.com")]),v._v("一直有贪玩蓝月广告，由于"),t("code",[v._v("http")]),v._v("明文传输，运营商会修改你的"),t("code",[v._v("http")]),v._v("响应内容")])])]),v._v(" "),t("p",[t("code",[v._v("dns")]),v._v("劫持由于涉嫌违法，已经被监管起来，现在很少有"),t("code",[v._v("dns")]),v._v("劫持，而"),t("code",[v._v("http")]),v._v("劫持依然非常盛行，最有效的方法还是使用"),t("code",[v._v("https")]),v._v("，使得运营商无法获取明文，就无法劫持你的响应内容")])])}),[],!1,null,null,null);_.default=s.exports}}]);