(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{524:function(e,v,_){"use strict";_.r(v);var s=_(26),a=Object(s.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"webpack"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[e._v("#")]),e._v(" Webpack")]),e._v(" "),_("h2",{attrs:{id:"webpack做了什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#webpack做了什么"}},[e._v("#")]),e._v(" "),_("code",[e._v("webpack")]),e._v("做了什么？")]),e._v(" "),_("ol",[_("li",[_("code",[e._v("webpack")]),e._v("本质上只是一个"),_("code",[e._v("js")]),e._v("引用程序的静态打包器，它能够基于文件的依赖，递归的构建一个文件依赖关系图，最终将文件打包称为一个或多个"),_("code",[e._v("bundle")]),e._v("；")]),e._v(" "),_("li",[_("code",[e._v("webpack")]),e._v("基于"),_("code",[e._v("entry")]),e._v("识别哪个/哪些模块是构建打包的入口")]),e._v(" "),_("li",[_("code",[e._v("webpack")]),e._v("基于"),_("code",[e._v("output")]),e._v("，将构建打包的文件输出到指定的目录")]),e._v(" "),_("li",[e._v("从入口文件出发，调用所有配置的"),_("code",[e._v("Loader")]),e._v("对模块进行翻译，再找出该模块依赖的模块，再"),_("code",[e._v("递归")]),e._v("本步骤 知道所有入口依赖的文件 都经过了本步骤的处理")]),e._v(" "),_("li",[e._v("经过"),_("code",[e._v("Loader")]),e._v("翻译完所有模块后，得到了每个模块被翻译后的最终内容以及它们之间的依赖关系。根据入口和模块之间的依赖关系，组装成一个个包含多个模块的"),_("code",[e._v("chunk")]),e._v("，再把每个"),_("code",[e._v("chunk")]),e._v("转换成一个单独的文件加入到输出列表")])]),e._v(" "),_("h2",{attrs:{id:"webpack的构建流程是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#webpack的构建流程是什么"}},[e._v("#")]),e._v(" "),_("code",[e._v("webpack")]),e._v("的构建流程是什么？"),_("badge",{attrs:{text:"重点",vetical:"top",type:"warning"}})],1),e._v(" "),_("p",[_("code",[e._v("webpack")]),e._v("的运行流程是一个串行的过程")]),e._v(" "),_("ul",[_("li",[_("strong",[e._v("初始化参数")]),e._v("：从配置文件和"),_("code",[e._v("Shell")]),e._v("语句中读取与合并参数，得出最终的参数")]),e._v(" "),_("li",[_("strong",[e._v("开始编译")]),e._v("：用上一步得到的参数初始化"),_("code",[e._v("Compiler")]),e._v("对象，注册所有配置的插件，监听"),_("code",[e._v("webpack")]),e._v("构建生命周期的事件节点，执行对象的"),_("code",[e._v("run")]),e._v("方法开始执行编译；")]),e._v(" "),_("li",[_("strong",[e._v("确定入口")]),e._v("：根据配置中的"),_("code",[e._v("entry")]),e._v("找出所有的入口文件；")]),e._v(" "),_("li",[_("strong",[e._v("编译模块")]),e._v("：从入口文件出发，并且找到其导入的依赖模块，递归遍历分析，形成依赖关系树，对不同文件类型的依赖模块文件使用对应的"),_("code",[e._v("Loader")]),e._v("进行编译，最终转为"),_("code",[e._v("Javascript")]),e._v("文件")]),e._v(" "),_("li",[_("strong",[e._v("完成模块编译")]),e._v("：在经过第四步使用"),_("code",[e._v("loader")]),e._v("翻译完所有模块后，得到了每个模块被翻译后的最终内容以及它们之间的依赖关系")]),e._v(" "),_("li",[_("strong",[e._v("输出资源")]),e._v("：根据入口和模块之间的依赖关系，调用"),_("code",[e._v("compilation.seal")]),e._v("方法组装成一个个包含多个模块的"),_("code",[e._v("Chunk")]),e._v("，再把每个"),_("code",[e._v("Chunk")]),e._v("转换成一个单独的文件加入到输出列表，这步是可以修改输出内容的最后机会；")]),e._v(" "),_("li",[_("strong",[e._v("输出完成")]),e._v("：再确定好输出内容后，根据配置确定输出的路径和文件名，把文件内容写入到文件系统")])]),e._v(" "),_("blockquote",[_("p",[e._v("在以上系统中，"),_("code",[e._v("webpack")]),e._v("会在特定的时间点广播出特定的事件，插件在监听到感兴趣的事件后会执行特定的逻辑，并且插件可以调用"),_("code",[e._v("webpack")]),e._v("提供的"),_("code",[e._v("API")]),e._v("改变"),_("code",[e._v("webpack")]),e._v("的运行结果")])]),e._v(" "),_("h2",{attrs:{id:"说一下关于tree-shaking的原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#说一下关于tree-shaking的原理"}},[e._v("#")]),e._v(" 说一下关于"),_("code",[e._v("tree-shaking")]),e._v("的原理")]),e._v(" "),_("blockquote",[_("p",[_("code",[e._v("tree-shaking")]),e._v(" 是一种通过清除多余代码方式来优化项目打包体积的技术")])]),e._v(" "),_("p",[e._v("当前端项目到达一定的规模后，我们一般会采用按模块方式组织代码，这样可以方便代码的组织及维护。但会存在一个问题，比如我们有一个"),_("code",[e._v("utils")]),e._v("工具类，在另一个模块中导入它。这会在打包的时候将"),_("code",[e._v("utils")]),e._v("中不必要的代码也打包，从而使得打包体积变大，这时候就需要用到"),_("code",[e._v("Tree shaking")]),e._v("技术了")]),e._v(" "),_("p",[_("strong",[e._v("原理")])]),e._v(" "),_("ul",[_("li",[e._v("利用"),_("code",[e._v("ES6")]),e._v("模块的特点\n"),_("ul",[_("li",[e._v("只能作为模块顶层的语句出现")]),e._v(" "),_("li",[_("code",[e._v("import")]),e._v("的模块名只能是字符串常量，不能动态引入模块")]),e._v(" "),_("li",[_("code",[e._v("import")]),e._v(" 引入的模块不能再进行修改的 ，因为"),_("code",[e._v("tree-shaking")]),e._v("只能在静态模块下工作。"),_("code",[e._v("ES6")]),e._v("模块加载是静态的，因此在"),_("code",[e._v("ES6")]),e._v("种使用"),_("code",[e._v("tree-shaking")]),e._v("是非常容易的。而且，"),_("code",[e._v("tree-shaking")]),e._v("不仅支持"),_("code",[e._v("import/export")]),e._v("级别，而且也支持声明级别")])])])]),e._v(" "),_("p",[e._v("简单来说，"),_("code",[e._v("Tree Shaking")]),e._v("的原理就是对你 "),_("code",[e._v("import")]),e._v(" 的代码进行静态分析，如果发现没有被用到的部分就不再 "),_("code",[e._v("export")]),e._v("。没有 "),_("code",[e._v("export")]),e._v(" 的代码就会被 "),_("code",[e._v("Uglify")]),e._v(" 当成死代码删除。需要注意的是，"),_("code",[e._v("Webpack")]),e._v(" 的 "),_("code",[e._v("Tree Shaking")]),e._v(" 不会直接把没有用到的代码删除，真正删除代码的是 "),_("code",[e._v("Uglify")]),e._v(" 或 "),_("code",[e._v("Terser")]),e._v(" 这样的 "),_("code",[e._v("JS")]),e._v(" 压缩工具")]),e._v(" "),_("p",[e._v("在"),_("code",[e._v("ES6")]),e._v("以前，"),_("code",[e._v("我们可以使用CommonJS引入模块：require()，这种引入是动态地")]),e._v("，也意味着我们可以基于条件来导入需要的代码：")]),e._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" mainModule"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//动态导入")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("condition"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    mainModule"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'dog'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    mainModule"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'cat'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br")])]),_("p",[_("code",[e._v("CommonJS")]),e._v("的动态特性意味着"),_("code",[e._v("tree-shaking")]),e._v("不适用。"),_("code",[e._v("因为它是不可能确定哪些模块实际运行之前是需要的或者是不需要的")]),e._v("。在"),_("code",[e._v("ES6")]),e._v("中，进入了完全静态的导入语法："),_("code",[e._v("import")]),e._v("。")]),e._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//不可行")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("condition"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    mainModule"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'dog'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    mainModule"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'cat'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br")])]),_("p",[e._v("只能通过导入所有的包后再进行条件获取")]),e._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" dog "),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'dog'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" cat "),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'cat'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("condition"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//dog.xxx")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//cat.xxx")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br")])]),_("p",[_("code",[e._v("ES6")]),e._v("的"),_("code",[e._v("import")]),e._v("语法可以使用"),_("code",[e._v("tree-shaking")]),e._v("，"),_("code",[e._v("因为可以在代码不运行的情况下就能分析出不需要的代码")]),e._v("。")]),e._v(" "),_("p",[_("strong",[e._v("如何使用？")])]),e._v(" "),_("p",[e._v("从"),_("code",[e._v("webpack2")]),e._v("开始支持实现了"),_("code",[e._v("tree-shaking")]),e._v("特性，"),_("code",[e._v("webpack2")]),e._v("正式版本内置支持"),_("code",[e._v("ES6")]),e._v("的模块(也叫"),_("code",[e._v("harmony")]),e._v("模块)和未引用模块检测能力。"),_("code",[e._v("webpack4")]),e._v("正式版本扩展了这个检测能力，通过"),_("code",[e._v("package.json")]),e._v("的"),_("code",[e._v("sideEffects")]),e._v("属性作为标记，向"),_("code",[e._v("complier")]),e._v("提供提示，表明项目中哪些文件是"),_("code",[e._v("ES6")]),e._v("模块，由此可以安全地删除文件中未使用地部分 如果使用的是"),_("code",[e._v("webpack4")]),e._v("，只需要将"),_("code",[e._v("mode")]),e._v("设置为"),_("code",[e._v("production")]),e._v("，就可以开启"),_("code",[e._v("tree-shaking")])]),e._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[e._v("entry"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./src/index.js'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\nmode"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'production'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\noutput"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    path"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" path"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("resolve")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("__dirname"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'dist'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    filename"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'bundle.js'")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br")])]),_("p",[e._v("如果使用"),_("code",[e._v("webpack2")]),e._v("，可能你会发现"),_("code",[e._v("tree-shaking")]),e._v("不起作用。因为"),_("code",[e._v("babel")]),e._v("会将代码编译成"),_("code",[e._v("CommonJS")]),e._v("模块，而"),_("code",[e._v("tree-shaking")]),e._v("不支持"),_("code",[e._v("CommonJS")]),e._v("，所以"),_("code",[e._v("需要配置不转义")])]),e._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[e._v("options"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    presets"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n        "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n            "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'es2015'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n            "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                modules"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n            "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n        "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br"),_("span",{staticClass:"line-number"},[e._v("10")]),_("br")])]),_("p",[_("strong",[e._v("关于副作用")])]),e._v(" "),_("blockquote",[_("p",[e._v("副作用是指那些当"),_("code",[e._v("import")]),e._v("的时候会执行一些动作，但是不一定会有任何"),_("code",[e._v("export")]),e._v("。比如"),_("code",[e._v("ployfill")]),e._v("，"),_("code",[e._v("ployfills")]),e._v("不对外暴露方法给主程序使用")])]),e._v(" "),_("p",[_("code",[e._v("tree-shaking")]),e._v("不能自动识别哪些代码属于副作用，因此手动指定这些代码显得非常重要，如果不指定可能会出现一些意想不到的问题")]),e._v(" "),_("p",[e._v("在"),_("code",[e._v("webpack")]),e._v("中，是通过"),_("code",[e._v("package.json")]),e._v("的"),_("code",[e._v("sideEffects")]),e._v("属性来实现的")]),e._v(" "),_("div",{staticClass:"language-json line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-json"}},[_("code",[_("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"tree-shaking"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token property"}},[e._v('"sideEffects"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br")])]),_("p",[e._v("如果所有的代码都不包含副作用，我们就可以简单地将该属性标记为"),_("code",[e._v("false")]),e._v("来告知"),_("code",[e._v("webpack")]),e._v("，它可以安全地删除未用到的"),_("code",[e._v("export")]),e._v("导出。")]),e._v(" "),_("p",[e._v("如果你的代码确实有一些副作用，那么可以改为提供一个数组：")]),e._v(" "),_("div",{staticClass:"language-json line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-json"}},[_("code",[_("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"tree-shaking"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token property"}},[e._v('"sideEffects"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"./src/public/polyfill.js"')]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br")])]),_("p",[_("strong",[e._v("总结")])]),e._v(" "),_("ul",[_("li",[_("code",[e._v("tree-shaking")]),e._v("不会支持动态导入(如"),_("code",[e._v("CommonJS")]),e._v("的"),_("code",[e._v("require()")]),e._v("语法)，只纯静态的导入("),_("code",[e._v("ES6")]),e._v("的"),_("code",[e._v("import/export")]),e._v(")")]),e._v(" "),_("li",[_("code",[e._v("webpack")]),e._v("中可以在项目"),_("code",[e._v("package.json")]),e._v('文件中，添加一个"'),_("code",[e._v("sideEffects")]),e._v('"属性，手动指定副作用的脚本')])]),e._v(" "),_("h2",{attrs:{id:"请简述一下hmr的原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#请简述一下hmr的原理"}},[e._v("#")]),e._v(" 请简述一下"),_("code",[e._v("HMR")]),e._v("的原理")]),e._v(" "),_("ol",[_("li",[e._v("使用"),_("code",[e._v("webpack Compiler")]),e._v("将"),_("code",[e._v("js")]),e._v("编译成"),_("code",[e._v("Bundle")])]),e._v(" "),_("li",[e._v("使用 "),_("code",[e._v("webpack-dev-server")]),e._v(" (后面简称 "),_("code",[e._v("WDS")]),e._v(")托管静态资源，同时以 "),_("code",[e._v("Runtime")]),e._v(" 方式注入 "),_("code",[e._v("HMR")]),e._v(" 客户端代码")]),e._v(" "),_("li",[e._v("浏览器加载页面后，与 "),_("code",[e._v("WDS")]),e._v(" 建立 "),_("code",[e._v("WebSocket")]),e._v(" 连接")]),e._v(" "),_("li",[_("code",[e._v("Webpack")]),e._v(" 通过"),_("code",[e._v("compile")]),e._v("类的"),_("code",[e._v("run")]),e._v("方法开启编译构建过程，调用"),_("code",[e._v("Watch")]),e._v("方法监听到文件变化后，增量构建发生变更的模块，并通过 "),_("code",[e._v("WebSocket")]),e._v(" 发送 "),_("code",[e._v("hash")]),e._v(" 事件")]),e._v(" "),_("li",[e._v("浏览器接收到 "),_("code",[e._v("hash")]),e._v(" 事件后，请求 "),_("code",[e._v("manifest")]),e._v(" 资源文件，确认增量变更范围")]),e._v(" "),_("li",[e._v("浏览器发送"),_("code",[e._v("jsonp")]),e._v("请求加载发生变更的增量模块")]),e._v(" "),_("li",[_("code",[e._v("Webpack")]),e._v(" 运行时触发变更模块的 "),_("code",[e._v("module.hot.accept")]),e._v(" 回调，执行代码变更逻辑")]),e._v(" "),_("li",[e._v("使用内存文件系统去替换有修改的内容实现局部刷新")])]),e._v(" "),_("p",[_("strong",[e._v("那么"),_("code",[e._v("webpack")]),e._v("服务器和浏览器端是怎么建立起通信的？")])]),e._v(" "),_("div",{staticClass:"custom-block note"},[_("p",{staticClass:"custom-block-title"},[e._v("EventStream 事件流")]),e._v(" "),_("p",[e._v("服务器端事件流，服务器向浏览器推送消息，除了 "),_("code",[e._v("websocket")]),e._v(" 全双工通道双向通信方式还有一种 "),_("code",[e._v("Server-Sent Events")]),e._v(" 单向通道的通信方法，只能服务器端向浏览器端通过流信息的方式推送消息；页面可以通过 "),_("code",[e._v("EventSource")]),e._v(" 实例接收服务器发送事件通知并触发 "),_("code",[e._v("onmessage")]),e._v(" 事件），并且以 "),_("code",[e._v("2s")]),e._v(" 的频率不停的更新消息内容，每行消息内容都有 ❤️ 的图标，没错这就是一个心跳请求。")])]),e._v(" "),_("h2",{attrs:{id:"source-map是什么-生产环境怎么用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#source-map是什么-生产环境怎么用"}},[e._v("#")]),e._v(" "),_("code",[e._v("source map")]),e._v("是什么？生产环境怎么用？")]),e._v(" "),_("p",[_("code",[e._v("source map")]),e._v(" 是将编译、打包、压缩后的代码映射回源代码的过程。打包压缩后的代码不具备良好的可读性，想要调试源码就需要 "),_("code",[e._v("soucre map")]),e._v("。")]),e._v(" "),_("p",[_("code",[e._v("map")]),e._v("文件只要不打开开发者工具，浏览器是不会加载的。")]),e._v(" "),_("p",[e._v("线上环境一般有三种处理方案：")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("hidden-source-map")]),e._v("：借助第三方错误监控平台 "),_("code",[e._v("Sentry")]),e._v(" 使用")]),e._v(" "),_("li",[_("code",[e._v("nosources-source-map")]),e._v("：只会显示具体行数以及查看源代码的错误栈。安全性比 "),_("code",[e._v("sourcemap")]),e._v(" 高")]),e._v(" "),_("li",[_("code",[e._v("sourcemap")]),e._v("：通过 "),_("code",[e._v("nginx")]),e._v(" 设置将 "),_("code",[e._v(".map")]),e._v(" 文件只对白名单开放(公司内网)")])]),e._v(" "),_("p",[e._v("注意：避免在生产中使用 "),_("code",[e._v("inline-")]),e._v(" 和 "),_("code",[e._v("eval-")]),e._v("，因为它们会增加 "),_("code",[e._v("bundle")]),e._v(" 体积大小，并降低整体性能。")]),e._v(" "),_("h2",{attrs:{id:"webpack打包时hash码是怎样生成的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#webpack打包时hash码是怎样生成的"}},[e._v("#")]),e._v(" "),_("code",[e._v("webpack")]),e._v("打包时"),_("code",[e._v("Hash")]),e._v("码是怎样生成的？")]),e._v(" "),_("p",[e._v("又称为文件指纹")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("hash")]),e._v(" 代表每次"),_("code",[e._v("webpack")]),e._v("编译中生成的"),_("code",[e._v("hash")]),e._v("值，所有使用这种方式的文件"),_("code",[e._v("hash")]),e._v("都相同。每次构建都会使"),_("code",[e._v("webpack")]),e._v("计算新的"),_("code",[e._v("hash")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("chunkhash")]),e._v("基于入口文件及其关联的"),_("code",[e._v("chunk")]),e._v("生成，某个文件的改动只会影响与它有关联的"),_("code",[e._v("chunk")]),e._v("的"),_("code",[e._v("hash")]),e._v("值，不会影响其他文件("),_("code",[e._v("index.js")]),e._v(" 和"),_("code",[e._v("index.css")]),e._v("是同一个"),_("code",[e._v("chunk")]),e._v("，如果只有一个文件改变，两个文件的"),_("code",[e._v("hash")]),e._v("都会改变)")]),e._v(" "),_("li",[_("code",[e._v("contenthash")]),e._v("根据文件内容创建。当文件内容发生变化时，"),_("code",[e._v("contenthash")]),e._v("发生变化")])]),e._v(" "),_("h2",{attrs:{id:"webpack打包出来的体积太大-如何优化体积"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#webpack打包出来的体积太大-如何优化体积"}},[e._v("#")]),e._v(" "),_("code",[e._v("webpack")]),e._v("打包出来的体积太大，如何优化体积?")]),e._v(" "),_("p",[_("strong",[e._v("借助工具分析性能瓶颈")])]),e._v(" "),_("p",[_("code",[e._v("speed-measure-webpack-plugin")]),e._v("，简称"),_("code",[e._v("SMP")]),e._v("，分析出 "),_("code",[e._v("webpack")]),e._v(" 打包过程中"),_("code",[e._v("Loader")]),e._v("和"),_("code",[e._v("Plugin")]),e._v("的耗时，有助于找到构建过程中的性能瓶颈。")]),e._v(" "),_("p",[_("strong",[e._v("按需加载")])]),e._v(" "),_("ul",[_("li",[e._v("路由组件按需加载")]),e._v(" "),_("li",[e._v("第三方组件和插件。按需加载需引入第三方组件")]),e._v(" "),_("li",[e._v("对于一些插件，如果只是在个别组件中用的到，也可以不要在 "),_("code",[e._v("main.js")]),e._v(" 里面引入，而是在组件中按需引入")])]),e._v(" "),_("p",[_("strong",[e._v("生产环境关闭 "),_("code",[e._v("sourceMap")])])]),e._v(" "),_("p",[_("strong",[e._v("代码压缩")])]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("UglifyJS")]),e._v(": "),_("code",[e._v("vue-cli")]),e._v(" 默认使用的压缩代码方式，它使用的是单线程压缩代码，打包时间较慢")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("ParallelUglifyPlugin")]),e._v(": 开启多个子进程，把对多个文件压缩的工作分别给多个子进程去完成")])])]),e._v(" "),_("p",[_("strong",[_("code",[e._v("CDN")]),e._v(" 优化")])]),e._v(" "),_("ul",[_("li",[e._v("随着项目越做越大，依赖的第三方 "),_("code",[e._v("npm")]),e._v(" 包越来越多，构建之后的文件也会越来越大。")]),e._v(" "),_("li",[e._v("再加上又是单页应用，这就会导致在网速较慢或者服务器带宽有限的情况出现长时间的白屏。")])]),e._v(" "),_("p",[_("strong",[e._v("压缩代码")])]),e._v(" "),_("p",[_("code",[e._v("webpack-paralle-uglify-plugin")])]),e._v(" "),_("p",[_("code",[e._v("uglifyjs-webpack-plugin")]),e._v(" 开启"),_("code",[e._v("parallel")]),e._v("参数(不支持"),_("code",[e._v("ES6")]),e._v(")")]),e._v(" "),_("p",[_("code",[e._v("terser-webpack-plugin")]),e._v(" 开启"),_("code",[e._v("paraller")]),e._v("参数")]),e._v(" "),_("p",[_("strong",[e._v("多进程并行压缩")])]),e._v(" "),_("p",[e._v("通过 "),_("code",[e._v("mini-css-extract-plugin")]),e._v(" 提取"),_("code",[e._v("Chunk")]),e._v("中的"),_("code",[e._v("CSS")]),e._v("代码到单独文件")]),e._v(" "),_("p",[e._v("通过 "),_("code",[e._v("optimize-css-assets-webpack-plugin")]),e._v(" 插件，开启"),_("code",[e._v("cssnano")]),e._v(" 压缩 "),_("code",[e._v("css")])]),e._v(" "),_("p",[_("strong",[e._v("提取页面公共资源")])]),e._v(" "),_("p",[e._v("使用 "),_("code",[e._v("html-webpack-externals-plugin")]),e._v("，将基础包通过"),_("code",[e._v("CDN")]),e._v("引入，不打入"),_("code",[e._v("bundle")]),e._v("中")]),e._v(" "),_("p",[e._v("使用"),_("code",[e._v("SplitChunksPlugin")]),e._v("进行(公共脚本、基础包、页面公共文件)分离("),_("code",[e._v("webpack4")]),e._v("内置) 替代了 "),_("code",[e._v("CommonsChunkPlugin")]),e._v(" 插件")]),e._v(" "),_("p",[e._v("基础包分离：将一些基础库放到"),_("code",[e._v("cdn")]),e._v("，比如"),_("code",[e._v("vue")]),e._v("、"),_("code",[e._v("webpack")]),e._v("配置 "),_("code",[e._v("external")]),e._v(" 是"),_("code",[e._v("vue")]),e._v("的不打入"),_("code",[e._v("bundle")])]),e._v(" "),_("p",[_("strong",[_("code",[e._v("Tree shaking")])])]),e._v(" "),_("blockquote",[_("p",[e._v("禁用"),_("code",[e._v("babel-loader")]),e._v("的模块依赖解析，否则 "),_("code",[e._v("webpack")]),e._v(" 接收到的就是转换过的"),_("code",[e._v("commonJS")]),e._v("形式的模块，无法进行"),_("code",[e._v("tree shaking")])])]),e._v(" "),_("p",[_("code",[e._v("purgecss-webpack-plugin")]),e._v(" 和 "),_("code",[e._v("mini-css-extract-plugin")]),e._v(" 配合使用(仅仅是建议)")]),e._v(" "),_("p",[e._v("打包过程中检测工程中没有引用过的模块并进行标记，在资源压缩时将它们从最终的"),_("code",[e._v("bundle")]),e._v("中去掉(只能对"),_("code",[e._v("ES6 Module")]),e._v("生效)开发中尽可能使用 "),_("code",[e._v("ES6 Module")]),e._v(" 的模块，提高"),_("code",[e._v("tree shaking")]),e._v("的效率")]),e._v(" "),_("p",[e._v("使用 "),_("code",[e._v("PurifyCSS")]),e._v("(不在维护)或者"),_("code",[e._v("uncss")]),e._v("去除无用"),_("code",[e._v("css")]),e._v("代码")]),e._v(" "),_("p",[_("strong",[_("code",[e._v("Scope hoisting")])])]),e._v(" "),_("p",[e._v("构建后的代码会存在大量闭包，造成体积增大，运行代码时创建的函数作用域变多，内存开销变大。")]),e._v(" "),_("p",[_("code",[e._v("Scope hoisting")]),e._v(" 将所有模块的代码按照引用顺序放在一个函数作用域里，然后适当的重命名一些变量以防止变量名冲突")]),e._v(" "),_("p",[e._v("必须是"),_("code",[e._v("ES6")]),e._v("的语法，因为有很多第三方库仍采用"),_("code",[e._v("CommonJS")]),e._v(" 语法，为了充分发挥"),_("code",[e._v("Scope hoisting")]),e._v(" 的作用，需要配置 "),_("code",[e._v("mainFields")]),e._v(" 对第三方模块优先采用 "),_("code",[e._v("jsnext:main")]),e._v(" 中指向的"),_("code",[e._v("ES6")]),e._v("模块化语法")]),e._v(" "),_("p",[_("strong",[e._v("图片压缩")])]),e._v(" "),_("p",[e._v("使用基于"),_("code",[e._v("node")]),e._v("库的"),_("code",[e._v("imagemin")]),e._v("(很多定制选项、可以处理多种图片格式)")]),e._v(" "),_("p",[e._v("配置 "),_("code",[e._v("image-webpack-loader")])]),e._v(" "),_("p",[_("strong",[e._v("动态"),_("code",[e._v("Ployfill")])])]),e._v(" "),_("p",[e._v("建议采用 "),_("code",[e._v("polyfill-service")]),e._v(" 只给用户返回需要的"),_("code",[e._v("polyfill")]),e._v("，社区维护。")]),e._v(" "),_("p",[_("code",[e._v("@babel-preset-env")]),e._v("中通过"),_("code",[e._v('useBuiltIns:"usage"')]),e._v(" 参数来动态加载"),_("code",[e._v("polyfill")])]),e._v(" "),_("h2",{attrs:{id:"使用import时-webpack对node-modules里的依赖会做什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用import时-webpack对node-modules里的依赖会做什么"}},[e._v("#")]),e._v(" 使用"),_("code",[e._v("import")]),e._v("时，"),_("code",[e._v("webpack")]),e._v("对"),_("code",[e._v("node_modules")]),e._v("里的依赖会做什么?")]),e._v(" "),_("p",[_("strong",[_("code",[e._v("ES6 Module")])])]),e._v(" "),_("p",[e._v("不同于"),_("code",[e._v("CommonJS")]),e._v("和"),_("code",[e._v("AMD")]),e._v("的模块加载方法，"),_("code",[e._v("ES6")]),e._v("在"),_("code",[e._v("JS")]),e._v("语言层面上实现了模块功能。")]),e._v(" "),_("p",[e._v("它的设计思想是：尽量的静态化，使得编译时就能确定模块的依赖关系。")]),e._v(" "),_("p",[e._v("在遇到模块加载命令"),_("code",[e._v("import")]),e._v("时，不会去执行模块，而是只生成一个引用。等到真的需要用到的时候，再到模块里面去取值。这和"),_("code",[e._v("CommonJS")]),e._v("模块规范的最大不同。")]),e._v(" "),_("p",[_("code",[e._v("webpack")]),e._v("会对"),_("code",[e._v("node_modules")]),e._v("里的依赖做什么")]),e._v(" "),_("p",[_("code",[e._v("webpack")]),e._v("会根据定义的引入方式判断模块类型，再进行相关编译转化。")]),e._v(" "),_("p",[e._v("当使用"),_("code",[e._v("import")]),e._v("引入时，"),_("code",[e._v("babel")]),e._v("默认会把"),_("code",[e._v("ES6")]),e._v("的模块转化成"),_("code",[e._v("CommonJS")]),e._v("规范，然后会将"),_("code",[e._v("node_module")]),e._v("里的依赖打包成自执行函数的样式")]),e._v(" "),_("ul",[_("li",[e._v("判断引入方式（"),_("code",[e._v("import")]),e._v(" 或 "),_("code",[e._v("require")]),e._v("）")]),e._v(" "),_("li",[e._v("编译转化")])]),e._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("modules")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//执行逻辑")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("模块数组"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br")])]),_("p",[e._v("在模块数组中将模块传入，在函数体中经过一系列操作最终将模块通过 "),_("code",[e._v("module.exports")]),e._v(" 导出")]),e._v(" "),_("h2",{attrs:{id:"import和commonjs在webpack打包过程中有什么不同"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#import和commonjs在webpack打包过程中有什么不同"}},[e._v("#")]),e._v(" "),_("code",[e._v("Import")]),e._v("和"),_("code",[e._v("CommonJS")]),e._v("在"),_("code",[e._v("webpack")]),e._v("打包过程中有什么不同")]),e._v(" "),_("ol",[_("li",[_("code",[e._v("es6")]),e._v("模块调用"),_("code",[e._v("commonjs")]),e._v("模块")])]),e._v(" "),_("p",[e._v("可以直接使用"),_("code",[e._v("commonjs")]),e._v("模块，"),_("code",[e._v("commonjs")]),e._v("模块将不会被"),_("code",[e._v("webpack")]),e._v("的模块系统编译而是"),_("code",[e._v("原样输出")]),e._v("，并且"),_("code",[e._v("commonjs")]),e._v("模块"),_("code",[e._v("没有default属性")])]),e._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[_("code",[e._v("es6")]),e._v("模块调用"),_("code",[e._v("es6")]),e._v("模块")])]),e._v(" "),_("p",[_("code",[e._v("被调用的es6模块不会添加{esModule:true}，只有调用者才会添加{ esModule:true}")]),e._v("，并且"),_("code",[e._v("可以进行tree-shaking操作")]),e._v("，如果被调用的"),_("code",[e._v("es6")]),e._v("模块只是"),_("code",[e._v("import")]),e._v("进来，但是并没有被用到，那么被调用的"),_("code",[e._v("es6")]),e._v("模块将会被标记为"),_("code",[e._v("/* unused harmony default export */")]),e._v("，在压缩时此模块将被删除(如果被调用的"),_("code",[e._v("es6")]),e._v("模块里有立即执行语句，那么这些语句将会被保留)")]),e._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[_("code",[e._v("commonjs")]),e._v("模块引用"),_("code",[e._v("es6")]),e._v("模块")])]),e._v(" "),_("p",[_("code",[e._v("es6")]),e._v("模块编译后会添加"),_("code",[e._v("{esModule:true}")]),e._v("。如果被调用的"),_("code",[e._v("es6")]),e._v("模块中恰好有"),_("code",[e._v("export default")]),e._v("语句，那么编译后的"),_("code",[e._v("es6")]),e._v("模块将会添加"),_("code",[e._v("default")]),e._v("属性")]),e._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[_("code",[e._v("commonjs")]),e._v("模块调用"),_("code",[e._v("commonjs")]),e._v("模块")])]),e._v(" "),_("p",[_("code",[e._v("commonjs")]),e._v("模块会原样输出")]),e._v(" "),_("h2",{attrs:{id:"loader和plugin的区别是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#loader和plugin的区别是什么"}},[e._v("#")]),e._v(" "),_("code",[e._v("Loader")]),e._v("和"),_("code",[e._v("Plugin")]),e._v("的区别是什么？"),_("badge",{attrs:{text:"重点",vetical:"top",type:"warning"}})],1),e._v(" "),_("p",[_("strong",[e._v("作用不同")])]),e._v(" "),_("ul",[_("li",[_("code",[e._v("Loader")]),e._v('直译为"加载器"。'),_("code",[e._v("Webpack")]),e._v("将一切文件视为模块，但是"),_("code",[e._v("webpack")]),e._v("原生是只能解析"),_("code",[e._v("js")]),e._v("文件，如果想将其他文件也打包的话，就会用到"),_("code",[e._v("loader")]),e._v("。 所以"),_("code",[e._v("Loader")]),e._v("的作用是让"),_("code",[e._v("webpack")]),e._v("拥有了加载和解析非"),_("code",[e._v("JavaScript")]),e._v("文件的能力。")]),e._v(" "),_("li",[_("code",[e._v("Plugin")]),e._v('直译为"插件"。'),_("code",[e._v("Plugin")]),e._v("可以扩展"),_("code",[e._v("webpack")]),e._v("的功能，让"),_("code",[e._v("webpack")]),e._v("具有更多的灵活性。 "),_("strong",[e._v("在 "),_("code",[e._v("Webpack")]),e._v(" 运行的生命周期中会广播出许多事件，"),_("code",[e._v("Plugin")]),e._v(" 可以监听这些事件")]),e._v("，在合适的时机通过 "),_("code",[e._v("Webpack")]),e._v(" 提供的 "),_("code",[e._v("API")]),e._v(" 改变输出结果。")])]),e._v(" "),_("p",[_("strong",[e._v("用法不同")])]),e._v(" "),_("ul",[_("li",[_("code",[e._v("Loader")]),e._v("在"),_("code",[e._v("module.rules")]),e._v("中配置，也就是说"),_("strong",[e._v("作为模块的解析规则而存在")]),e._v("。类型为数组，每一项都是一个"),_("code",[e._v("Object")]),e._v("，里面描述了对于什么类型的文件（"),_("code",[e._v("test")]),e._v("），使用什么加载("),_("code",[e._v("loader")]),e._v(")和使用的参数（"),_("code",[e._v("options")]),e._v("）")]),e._v(" "),_("li",[_("code",[e._v("Plugin")]),e._v("在"),_("code",[e._v("plugins")]),e._v("中单独配置。类型为数组，每一项是一个"),_("code",[e._v("plugin")]),e._v("的实例，参数都通过构造函数传入")])]),e._v(" "),_("h2",{attrs:{id:"说一下-webpack-中-css-loader-和-style-loader-的区别-file-loader-和-url-loader-的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#说一下-webpack-中-css-loader-和-style-loader-的区别-file-loader-和-url-loader-的区别"}},[e._v("#")]),e._v(" 说一下 "),_("code",[e._v("webpack")]),e._v(" 中 "),_("code",[e._v("css-loader")]),e._v(" 和 "),_("code",[e._v("style-loader")]),e._v(" 的区别，"),_("code",[e._v("file-loader")]),e._v(" 和 "),_("code",[e._v("url-loader")]),e._v(" 的区别？"),_("badge",{attrs:{text:"重点",vetical:"top",type:"warning"}})],1),e._v(" "),_("ul",[_("li",[_("code",[e._v("css-loader")]),e._v("：处理 "),_("code",[e._v("css")]),e._v(" 文件,对 "),_("code",[e._v("@import")]),e._v(" 和 "),_("code",[e._v("url()")]),e._v(" 进行处理，就像 "),_("code",[e._v("js")]),e._v(" 解析 "),_("code",[e._v("import/require()")]),e._v(" 一样")]),e._v(" "),_("li",[_("code",[e._v("style-loader")]),e._v("：把"),_("code",[e._v("css")]),e._v("代码打包到 "),_("code",[e._v("js")]),e._v(" 文件中，运行 "),_("code",[e._v("js")]),e._v(" 文件时，将样式自动插入到"),_("code",[e._v("<style></style>")]),e._v("标签中")]),e._v(" "),_("li",[_("code",[e._v("file-loader")]),e._v("：返回的是图片的 "),_("code",[e._v("url")])]),e._v(" "),_("li",[_("code",[e._v("url-loader")]),e._v("：可以通过 "),_("code",[e._v("limit")]),e._v(" 属性对图片分情况处理，当图片小于 "),_("code",[e._v("limit")]),e._v("(单位为 "),_("code",[e._v("byte")]),e._v(")大小时转 "),_("code",[e._v("base64")]),e._v("，大于 "),_("code",[e._v("limit")]),e._v(" 时调用 "),_("code",[e._v("file-loader")]),e._v(" 对图片进行处理")])]),e._v(" "),_("blockquote",[_("p",[_("code",[e._v("url-loader")]),e._v(" 封装了 "),_("code",[e._v("file-loader")]),e._v("，但 "),_("code",[e._v("url-loader")]),e._v(" 并不依赖 "),_("code",[e._v("file-loader")])])]),e._v(" "),_("h2",{attrs:{id:"常见的loader以及作用的总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见的loader以及作用的总结"}},[e._v("#")]),e._v(" 常见的"),_("code",[e._v("loader")]),e._v("以及作用的总结"),_("badge",{attrs:{text:"重点",vetical:"top",type:"warning"}})],1),e._v(" "),_("ul",[_("li",[_("code",[e._v("raw-loader")]),e._v("：加载文件原始内容（"),_("code",[e._v("utf-8")]),e._v("）")]),e._v(" "),_("li",[_("code",[e._v("file-loader")]),e._v("：把文件输出到一个文件夹中，在代码中通过相对"),_("code",[e._v("URL")]),e._v("去引用输出的文件")]),e._v(" "),_("li",[_("code",[e._v("url-loader")]),e._v(": 和"),_("code",[e._v("file-loader")]),e._v("类似，但是能在文件很小的情况下以"),_("code",[e._v("base64")]),e._v("的方式把文件内容注入到代码中")]),e._v(" "),_("li",[_("code",[e._v("source-map-loader")]),e._v(": 加载额外的"),_("code",[e._v("Source Map")]),e._v("文件，以方便断点调试")]),e._v(" "),_("li",[_("code",[e._v("svg-inline-loader")]),e._v("：将压缩后的 "),_("code",[e._v("SVG")]),e._v(" 内容注入代码中")]),e._v(" "),_("li",[_("code",[e._v("image-loader")]),e._v("：加载并且压缩图片文件")]),e._v(" "),_("li",[_("code",[e._v("json-loader")]),e._v(" 加载 "),_("code",[e._v("JSON")]),e._v(" 文件"),_("code",[e._v("（默认包含）")])]),e._v(" "),_("li",[_("code",[e._v("handlebars-loader")]),e._v(": 将 "),_("code",[e._v("Handlebars")]),e._v(" 模版编译成函数并返回")]),e._v(" "),_("li",[_("code",[e._v("babel-loader：把ES6转化成ES5")])]),e._v(" "),_("li",[_("code",[e._v("ts-loader: 将 TypeScript 转换成 JavaScript")])]),e._v(" "),_("li",[_("code",[e._v("awesome-typescript-loader")]),e._v("：将 "),_("code",[e._v("TypeScript")]),e._v(" 转换成 "),_("code",[e._v("JavaScript")]),e._v("，性能优于 "),_("code",[e._v("ts-loader")])]),e._v(" "),_("li",[_("code",[e._v("css-loader")]),e._v("：加载"),_("code",[e._v("css")]),e._v("，支持模块化、压缩、文件导入等特性")]),e._v(" "),_("li",[_("code",[e._v("style-loader")]),e._v("：把"),_("code",[e._v("css")]),e._v("代码注入到"),_("code",[e._v("js")]),e._v("中，通过"),_("code",[e._v("DOM")]),e._v("操作去加载"),_("code",[e._v("css")])]),e._v(" "),_("li",[_("code",[e._v("eslint-loader：通过ESLint检查JS代码")])]),e._v(" "),_("li",[_("code",[e._v("tslint-loader：通过 TSLint检查 TypeScript 代码")])]),e._v(" "),_("li",[_("code",[e._v("postcss-loader：扩展 CSS 语法，使用下一代 CSS，可以配合 autoprefixer 插件自动补齐 CSS3 前缀")])]),e._v(" "),_("li",[_("code",[e._v("vue-loader：加载 Vue.js 单文件组件")])]),e._v(" "),_("li",[_("code",[e._v("cache-loader: 可以在一些性能开销较大的 Loader 之前添加，目的是将结果缓存到磁盘里")])])]),e._v(" "),_("h2",{attrs:{id:"常见的plugin以及作用的总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见的plugin以及作用的总结"}},[e._v("#")]),e._v(" 常见的"),_("code",[e._v("plugin")]),e._v("以及作用的总结")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("define-plugin")]),e._v("：定义环境变量("),_("code",[e._v("Webpack4")]),e._v(" 之后指定 "),_("code",[e._v("mode")]),e._v(" 会自动配置)")]),e._v(" "),_("li",[_("code",[e._v("ignore-plugin")]),e._v("：忽略部分文件")]),e._v(" "),_("li",[_("code",[e._v("commons-chunk-plugin")]),e._v("：提取公共代码")]),e._v(" "),_("li",[_("code",[e._v("html-webpack-plugin")]),e._v("：简化 "),_("code",[e._v("HTML")]),e._v(" 文件创建 (依赖于 "),_("code",[e._v("html-loader")]),e._v(")")]),e._v(" "),_("li",[_("code",[e._v("web-webpack-plugin")]),e._v("：可方便地为单页应用输出 "),_("code",[e._v("HTML")]),e._v("，比 "),_("code",[e._v("html-webpack-plugin")]),e._v(" 好用")]),e._v(" "),_("li",[_("code",[e._v("uglifyjs-webpack-plugin")]),e._v("：不支持 "),_("code",[e._v("ES6")]),e._v("压缩 ("),_("code",[e._v("Webpack4")]),e._v(" 以前)")]),e._v(" "),_("li",[_("code",[e._v("terser-webpack-plugin")]),e._v(": 支持压缩 "),_("code",[e._v("ES6")]),e._v(" ("),_("code",[e._v("Webpack4")]),e._v(")")]),e._v(" "),_("li",[_("code",[e._v("mini-css-extract-plugin")]),e._v(": 分离样式文件，"),_("code",[e._v("CSS")]),e._v(" 提取为独立文件，支持按需加载 (替代"),_("code",[e._v("extract-text-webpack-plugin")]),e._v(")")]),e._v(" "),_("li",[_("code",[e._v("webpack-parallel-uglify-plugin")]),e._v(": 多进程执行代码压缩，提升构建速度")]),e._v(" "),_("li",[_("code",[e._v("serviceworker-webpack-plugin")]),e._v("：为网页应用增加离线缓存功能")]),e._v(" "),_("li",[_("code",[e._v("clean-webpack-plugin")]),e._v(": 目录清理")]),e._v(" "),_("li",[_("code",[e._v("ModuleConcatenationPlugin")]),e._v(": 开启 "),_("code",[e._v("Scope Hoisting")])]),e._v(" "),_("li",[_("code",[e._v("speed-measure-webpack-plugin")]),e._v(": 可以看到每个 "),_("code",[e._v("Loader")]),e._v(" 和 "),_("code",[e._v("Plugin")]),e._v(" 执行耗时 (整个打包耗时、每个 "),_("code",[e._v("Plugin")]),e._v(" 和 "),_("code",[e._v("Loader")]),e._v(" 耗时)")]),e._v(" "),_("li",[_("code",[e._v("webpack-bundle-analyzer")]),e._v(": 可视化 "),_("code",[e._v("Webpack")]),e._v(" 输出文件的体积 (业务组件、依赖第三方模块)")])]),e._v(" "),_("h2",{attrs:{id:"webpack构建时有无做一些自定义操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#webpack构建时有无做一些自定义操作"}},[e._v("#")]),e._v(" "),_("code",[e._v("webpack")]),e._v("构建时有无做一些自定义操作")]),e._v(" "),_("ol",[_("li",[_("code",[e._v("alias")]),e._v("：指定别名，能在一定程度上降低开发对文件路径的输入难度，缓存路径能提升些打包速度")]),e._v(" "),_("li",[_("code",[e._v("module对loader处理添加fallback")]),e._v("，能在"),_("code",[e._v("loader")]),e._v("处理中，依次进行指定的预处理或后处理，自定义"),_("code",[e._v("loader")]),e._v("组件也可以在此进行特殊替换")]),e._v(" "),_("li",[_("code",[e._v("optimization-splitChunks-cacheGroups")]),e._v("自定义打包中的性能优化部分，对共用模块的拆分、识别以及提取后的指定部分")]),e._v(" "),_("li",[e._v("自定义的"),_("code",[e._v("plugins")]),e._v("配置\n"),_("ul",[_("li",[_("code",[e._v("CopyWebpackPlugin")]),e._v("对静态文件的拷贝")]),e._v(" "),_("li",[_("code",[e._v("ProgressBarPlugin")]),e._v("打包进度的监控")]),e._v(" "),_("li",[_("code",[e._v("HappyPack")]),e._v("多线程打包等等")])])]),e._v(" "),_("li",[_("code",[e._v("stats调整打包过程中控制台的输出")]),e._v("，详细到每个文件的大小、耗时及打包状态等各种显示优化")]),e._v(" "),_("li",[_("code",[e._v("devServer-before")]),e._v(": 添加打包前的优化，可以实现较为简洁的"),_("code",[e._v("mock")]),e._v("数据")])]),e._v(" "),_("h2",{attrs:{id:"webpack-里面的插件是如何实现的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#webpack-里面的插件是如何实现的"}},[e._v("#")]),e._v(" webpack 里面的插件是如何实现的？")]),e._v(" "),_("p",[_("strong",[e._v("实现分析")])]),e._v(" "),_("ul",[_("li",[_("code",[e._v("webpack")]),e._v("本质是一个事件流机制，核心模块："),_("code",[e._v("tapable(Sync + Async)Hooks")]),e._v(" 构造出 "),_("code",[e._v("Compiler")]),e._v("(编译) + "),_("code",[e._v("Compilation")]),e._v("(创建"),_("code",[e._v("bundles")]),e._v(")")]),e._v(" "),_("li",[_("code",[e._v("compiler对象代表了完整的webpack环境配置")]),e._v("。这个对象在启动"),_("code",[e._v("webpack")]),e._v("时被一次性建立，并配置好所有可操作的设置，包括"),_("code",[e._v("options")]),e._v("、"),_("code",[e._v("loader")]),e._v("和"),_("code",[e._v("plugin")]),e._v("。当在"),_("code",[e._v("webpack")]),e._v("环境中应用一个插件时，插件将收到此"),_("code",[e._v("compiler")]),e._v("对象的引用。可以使用它来访问"),_("code",[e._v("webpack")]),e._v("的主环境")]),e._v(" "),_("li",[_("code",[e._v("compilation对象代表了一次资源版本构建")]),e._v("。当运行"),_("code",[e._v("webpack")]),e._v("开发环境中间件时，每当检测到一个文件变化，就会创建一个新的"),_("code",[e._v("compilation")]),e._v("，从而生成一个新的编译资源。一个"),_("code",[e._v("compilation")]),e._v("对象表现了当前的模块资源、编译生成资源、变化的文件、以及被跟踪依赖的状态的信息。"),_("code",[e._v("compilation")]),e._v("对象也提供了很多关键时机的回调，以供插件做自定义处理时选择使用")]),e._v(" "),_("li",[_("code",[e._v("创建一个插件函数")]),e._v("，在其"),_("code",[e._v("prototype")]),e._v("上定义"),_("code",[e._v("apply")]),e._v("方法，指定一个"),_("code",[e._v("webpack")]),e._v("自身的事件钩子")]),e._v(" "),_("li",[_("code",[e._v("函数内部处理webpack内部实例的特定数据")])]),e._v(" "),_("li",[_("code",[e._v("处理完成后，调用webpack提供的回调函数")])])]),e._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("MyWebpackPlugin")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// prototype上定义apply方法")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("MyWebpackPlugin")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("prototype"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),_("span",{pre:!0,attrs:{class:"token function-variable function"}},[e._v("apply")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 指定一个事件函数挂载到webpack")]),e._v("\n    compiler"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("plugin")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"webpacksEventHook"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("funcion")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("compiler")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        console"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"这是一个插件"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n        "),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//功能完成调用后webpack提供的回调函数")]),e._v("\n        "),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("callback")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br"),_("span",{staticClass:"line-number"},[e._v("10")]),_("br"),_("span",{staticClass:"line-number"},[e._v("11")]),_("br"),_("span",{staticClass:"line-number"},[e._v("12")]),_("br")])]),_("h2",{attrs:{id:"使用webpack开发时-你用过哪些可以提高效率的插件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用webpack开发时-你用过哪些可以提高效率的插件"}},[e._v("#")]),e._v(" 使用"),_("code",[e._v("webpack")]),e._v("开发时，你用过哪些可以提高效率的插件？")]),e._v(" "),_("p",[e._v("(这道题还蛮注重实际，用户的体验还是要从小抓起的)")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("webpack-dashboard")]),e._v("：可以更友好的展示相关打包信息。")]),e._v(" "),_("li",[_("code",[e._v("webpack-merge")]),e._v("：提取公共配置，减少重复配置代码")]),e._v(" "),_("li",[_("code",[e._v("speed-measure-webpack-plugin")]),e._v("：简称 "),_("code",[e._v("SMP")]),e._v("，分析出 "),_("code",[e._v("Webpack")]),e._v(" 打包过程中 "),_("code",[e._v("Loader")]),e._v(" 和 "),_("code",[e._v("Plugin")]),e._v(" 的耗时，有助于找到构建过程中的性能瓶颈。")]),e._v(" "),_("li",[_("code",[e._v("size-plugin")]),e._v("：监控资源体积变化，尽早发现问题")]),e._v(" "),_("li",[_("code",[e._v("HotModuleReplacementPlugin")]),e._v("：模块热替换")])]),e._v(" "),_("h2",{attrs:{id:"prerender-预渲染是什么原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#prerender-预渲染是什么原理"}},[e._v("#")]),e._v(" "),_("code",[e._v("Prerender")]),e._v(" 预渲染是什么原理?")]),e._v(" "),_("p",[e._v("在 "),_("code",[e._v("webpack")]),e._v(" 打包结束并生成文件后("),_("code",[e._v("after-emit hook")]),e._v("),会启动一个 "),_("code",[e._v("server")]),e._v(" 模拟网站的运行，用 "),_("code",[e._v("puppeteer")]),e._v("("),_("code",[e._v("google")]),e._v(" 官方的 "),_("code",[e._v("headless")]),e._v(" 无头浏览器)访问指定的页面 "),_("code",[e._v("route")]),e._v("，得到相应的 "),_("code",[e._v("html")]),e._v(" 结构，并将结果输出指定目录，过程类似爬虫。")]),e._v(" "),_("p",[e._v("即利用打包工具对应用进行预先渲染，让用户在首次获取到 "),_("code",[e._v("html")]),e._v(" 文件的时候就已经能看到我们的内容，接着等待 "),_("code",[e._v("Bundle")]),e._v(" 下载解析完成之后再进行接管。")]),e._v(" "),_("p",[_("strong",[e._v("打包构建预渲染的核心原理又是什么呢?")])]),e._v(" "),_("p",[e._v("其实这里就要用到无头浏览器来帮助实现这项功能，他会在本地启动一个无头浏览器，并访问我们配置好的路由，接着将渲染好的页面 "),_("code",[e._v("html")]),e._v(" 内容输出到我们的 "),_("code",[e._v("html")]),e._v(" 文件中，并建立相关的目录")]),e._v(" "),_("p",[e._v("一般常用的无头浏览器 比如: "),_("code",[e._v("phantomjs、puppeteer")]),e._v(", 对于 "),_("code",[e._v("prerender-spa-plugin")]),e._v(" 插件来说，它内部就是采用了 "),_("code",[e._v("phantomjs")]),e._v(" 作为无头浏览器进行预渲染。")]),e._v(" "),_("p",[_("strong",[e._v("应用场景")])]),e._v(" "),_("ul",[_("li",[_("code",[e._v("seo")]),e._v(" 优化: 对于一些动态数据利用 "),_("code",[e._v("renderAfterTime")]),e._v(" 也可以进行预渲染出来。当动态数据渲染出来之后，客户端代码比如 "),_("code",[e._v("bundle.js")]),e._v(" 会马上接管 "),_("code",[e._v("dom")]),e._v(" 操作，对于 "),_("code",[e._v("spa")]),e._v(" 优化有便捷性")]),e._v(" "),_("li",[e._v("骨架屏: 把骨架屏当做预渲染页面，当 "),_("code",[e._v("ajax")]),e._v(" 获取到数据之后再把骨架屏替换掉; "),_("code",[e._v("prerender-spa-plugin")]),e._v(" 提供了 "),_("code",[e._v("postProcessHtml")]),e._v(" 钩子")])]),e._v(" "),_("p",[_("code",[e._v("预渲染不适用经常变化的数据")]),e._v("，比如说股票代码网站，天气预报网站。因为此时的数据是动态的，而预渲染时已经生成好了 "),_("code",[e._v("dom")]),e._v(" 节点。如果要兼容 "),_("code",[e._v("seo")]),e._v(" 可以使用 "),_("code",[e._v("SSR")]),e._v("。")]),e._v(" "),_("p",[_("code",[e._v("预渲染不适用大量的路由页面")]),e._v("，比如成千上百个路由，此时打包后预渲染将会非常慢。")]),e._v(" "),_("p",[e._v("预渲染最好的应用场景是需要"),_("code",[e._v("seo")]),e._v("的活动页面")]),e._v(" "),_("p",[_("strong",[e._v("优点")])]),e._v(" "),_("ul",[_("li",[_("code",[e._v("seo")]),e._v(": 对于搜索引擎爬虫来说(先排除高级爬虫)，它不会等待你的"),_("code",[e._v("JS")]),e._v("执行完成之后才进行抓取，如果不进行预渲染，对于客户端渲染应用来说，"),_("code",[e._v("HTML")]),e._v("文件中几乎没有什么内容，故会影响你的搜索排名。采用预渲染就能保证在首次加载就能获取到相关的"),_("code",[e._v("html")]),e._v("内容，利于"),_("code",[e._v("seo")])]),e._v(" "),_("li",[e._v("弱网环境：对于网络条件比较差的用户来说，你的"),_("code",[e._v("bundle")]),e._v("文件过大，会导致页面长时间白屏，这将使你白白流失很多用户，所以首次内容的快速呈现也是很重要的，解决白屏问题。")])]),e._v(" "),_("h2",{attrs:{id:"预渲染-prerender-spa-plugin-能详细讲解么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#预渲染-prerender-spa-plugin-能详细讲解么"}},[e._v("#")]),e._v(" 预渲染 "),_("code",[e._v("prerender-spa-plugin")]),e._v(" 能详细讲解么?")]),e._v(" "),_("p",[e._v("直接使用该插件的时候可以配置需要预渲染的路由：")]),e._v(" "),_("p",[e._v("默认情况下"),_("code",[e._v("html")]),e._v("会在脚本执行完被捕获并输出，你也可以执行一些钩子，"),_("code",[e._v("HTML")]),e._v("将会在特定时机被捕获。")]),e._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" path "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'path'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" PrerenderSpaPlugin "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'prerender-spa-plugin'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// TODO...")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  plugins"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("PrerenderSpaPlugin")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      path"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("resolve")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("__dirname"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./dist'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/home'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/foo'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 监听到自定事件时捕获")]),e._v("\n        captureAfterDocumentEvent"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"custom-post-render-event"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 查询到指定元素时捕获")]),e._v("\n        captureAfterElementExists"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"#content"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),_("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 定时捕获")]),e._v("\n        captureAfterTime"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[e._v("5000")]),e._v("\n      "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br"),_("span",{staticClass:"line-number"},[e._v("10")]),_("br"),_("span",{staticClass:"line-number"},[e._v("11")]),_("br"),_("span",{staticClass:"line-number"},[e._v("12")]),_("br"),_("span",{staticClass:"line-number"},[e._v("13")]),_("br"),_("span",{staticClass:"line-number"},[e._v("14")]),_("br"),_("span",{staticClass:"line-number"},[e._v("15")]),_("br"),_("span",{staticClass:"line-number"},[e._v("16")]),_("br"),_("span",{staticClass:"line-number"},[e._v("17")]),_("br"),_("span",{staticClass:"line-number"},[e._v("18")]),_("br"),_("span",{staticClass:"line-number"},[e._v("19")]),_("br")])]),_("p",[e._v("这样配置完之后我们就能在我们的"),_("code",[e._v("dist")]),e._v("目录中找到相关路由的预渲染"),_("code",[e._v("HTML")]),e._v("文件了")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("dist\n  - index.html\n  - home\n    - index.html\n  - foo\n    - index.html\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br")])]),_("p",[e._v("路由模式改成"),_("code",[e._v("history")]),e._v("模式")]),e._v(" "),_("p",[_("strong",[e._v("缺点")])]),e._v(" "),_("p",[e._v("正是因为预渲染的构建是由打包工具在打包的时候就渲染出来了，所以如果不重新构建，那么用户所看到的预渲染页面永远都是一成不变的，即便你的页面数据早早更新，但是初次渲染的时候，浏览器展示的依旧是这套老旧的数据，如果想要看到最新的数据就需要等待"),_("code",[e._v("js")]),e._v("下载完毕重新渲染的时候才会出现，从而造成用户感觉很突兀的感觉")]),e._v(" "),_("p",[e._v("由于需要借助打包工具的力量，所以我们需要增加一些配置成本，不仅如此，在进行预渲染时，也同样会拉长打包的总时间，使我们每次构建的速度大大降低，这是十分糟糕的开发体验")]),e._v(" "),_("h2",{attrs:{id:"devserver中常用的配置对象属性如下"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#devserver中常用的配置对象属性如下"}},[e._v("#")]),e._v(" "),_("code",[e._v("devServer")]),e._v("中常用的配置对象属性如下")]),e._v(" "),_("ol",[_("li",[_("code",[e._v('contentBase: "./"')]),e._v(" 本地服务器在哪个目录搭建页面，一般在当前目录即可")]),e._v(" "),_("li",[_("code",[e._v("historyApiFallback：true")]),e._v(" 搭建"),_("code",[e._v("spa")]),e._v("应用时会用到。它使用的时"),_("code",[e._v("HTML5 History Api")]),e._v("，任意的跳转或"),_("code",[e._v("404")]),e._v("响应可以指向"),_("code",[e._v("index.html")]),e._v("页面")]),e._v(" "),_("li",[_("code",[e._v("inline：true")]),e._v(" 用来支持"),_("code",[e._v("dev-server")]),e._v("自动刷新的配置，"),_("code",[e._v("webpack")]),e._v("有两种模式支持自动刷新，一种是"),_("code",[e._v("iframe")]),e._v("模式，一种是"),_("code",[e._v("inline")]),e._v("模式；使用"),_("code",[e._v("iframe")]),e._v("模式是不需要在"),_("code",[e._v("devServer")]),e._v("进行配置的。只需使用特定的"),_("code",[e._v("URL")]),e._v("格式访问即可；不过我们一般还是常用"),_("code",[e._v("inline")]),e._v("模式，在"),_("code",[e._v("devServer")]),e._v("中对"),_("code",[e._v("inline")]),e._v("设置为"),_("code",[e._v("true")]),e._v("后，当启动"),_("code",[e._v("webpack-dev-server")]),e._v("时仍需要配置"),_("code",[e._v("inline")]),e._v("才能生效")]),e._v(" "),_("li",[_("code",[e._v("hot: true")]),e._v(" 启动"),_("code",[e._v("webpack")]),e._v("热模块替换特性")]),e._v(" "),_("li",[_("code",[e._v("port")]),e._v(" 端口号(默认"),_("code",[e._v("8080")]),e._v(")")])]),e._v(" "),_("h2",{attrs:{id:"devserver怎么跑起来的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#devserver怎么跑起来的"}},[e._v("#")]),e._v(" "),_("code",[e._v("devServer")]),e._v("怎么跑起来的")]),e._v(" "),_("ol",[_("li",[e._v("启动"),_("code",[e._v("HTTP")]),e._v("服务")]),e._v(" "),_("li",[_("code",[e._v("webpack")]),e._v("构建时输出"),_("code",[e._v("Bundle")]),e._v("到内存，"),_("code",[e._v("HTTP")]),e._v("服务从内存中读取"),_("code",[e._v("Bundle")]),e._v("文件")]),e._v(" "),_("li",[e._v("监听文件变化，重新执行第二个步骤")])]),e._v(" "),_("p",[_("code",[e._v("dev-server")]),e._v(" 实际上是一个"),_("code",[e._v("HTTP")]),e._v("服务器，所以还可以做静态资源的访问和"),_("code",[e._v("API")]),e._v("的"),_("code",[e._v("Proxy")]),e._v("代码")]),e._v(" "),_("h2",{attrs:{id:"webpack如何用localstorage离线缓存静态资源"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#webpack如何用localstorage离线缓存静态资源"}},[e._v("#")]),e._v(" "),_("code",[e._v("webpack")]),e._v("如何用"),_("code",[e._v("localStorage")]),e._v("离线缓存静态资源？")]),e._v(" "),_("ol",[_("li",[e._v("在配置"),_("code",[e._v("webpack")]),e._v("时，我们可以使用"),_("code",[e._v("html-webpack-plugin")]),e._v("来注入到和"),_("code",[e._v("html")]),e._v("一段脚本来实现将第三方或者共用资源进行静态化存储在html中注入一段标识，例如"),_("code",[e._v("<% HtmlWebpackPlugin.options.loading.html %>")]),e._v("，在"),_("code",[e._v("html-webpack-plugin")]),e._v("中即可通过配置"),_("code",[e._v("html")]),e._v("属性，将"),_("code",[e._v("script")]),e._v("注入进去")]),e._v(" "),_("li",[e._v("利用"),_("code",[e._v("webpack-manifest-plugin")]),e._v("并通过配置"),_("code",[e._v("webpack-manifest-plugin")]),e._v("，生成"),_("code",[e._v("manifest.json")]),e._v("文件，用来对比"),_("code",[e._v("js")]),e._v("资源的差异，做到是否替换，当然，也要写缓存"),_("code",[e._v("script")])]),e._v(" "),_("li",[e._v("在我们做"),_("code",[e._v("CI")]),e._v("以及"),_("code",[e._v("CD")]),e._v("的时候，也可以通过编辑文件流来实现静态化脚本的注入，来降低服务器的压力，提高性能")]),e._v(" "),_("li",[e._v("可以通过自定义"),_("code",[e._v("plugin")]),e._v("或者"),_("code",[e._v("html-webpack-plugin")]),e._v("等周期函数，动态注入前端静态化存储"),_("code",[e._v("script")])])]),e._v(" "),_("h2",{attrs:{id:"如何实现-webpack-持久化缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何实现-webpack-持久化缓存"}},[e._v("#")]),e._v(" 如何实现 "),_("code",[e._v("webpack")]),e._v(" 持久化缓存?")]),e._v(" "),_("ol",[_("li",[_("p",[_("strong",[e._v("强缓存")]),e._v(":服务端设置"),_("code",[e._v("HTTP")]),e._v("缓存头("),_("code",[e._v("Cache-Control")]),e._v("等)")])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("依赖和运行时单独打包")]),e._v(":打包依赖("),_("code",[e._v("dependencies")]),e._v(")和运行时("),_("code",[e._v("runtime")]),e._v(")到不同"),_("code",[e._v("chunk")]),e._v("(在"),_("code",[e._v("webpack")]),e._v("中，编译后的单独文件称为"),_("code",[e._v("chunk")]),e._v(")，即作"),_("code",[e._v("splitChunk")]),e._v("，因为它们几乎是不变的")])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("分包加载（延迟加载）")]),e._v(":使用"),_("code",[e._v("import()")]),e._v("方式，可以动态加载的文件分到独立的"),_("code",[e._v("chunk")]),e._v("，以得到自己的"),_("code",[e._v("chunkhash")])])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("保证"),_("code",[e._v("hash")]),e._v("值稳定")]),e._v(":编译过程和文件内容的更改尽量不影响其他文件"),_("code",[e._v("hash")]),e._v("的计算。对于"),_("code",[e._v("低版本webpack生成的增量数字ID不稳定问题")]),e._v("，可用"),_("code",[e._v("HashedModuleldsPlugin")]),e._v("基于文件路径生成解决")])])])])}),[],!1,null,null,null);v.default=a.exports}}]);