(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{465:function(_,v,t){"use strict";t.r(v);var e=t(26),s=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"https协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https协议"}},[_._v("#")]),_._v(" HTTPS协议")]),_._v(" "),t("p",[t("code",[_._v("https")]),_._v("协议是"),t("strong",[_._v("超文本传输安全协议")]),_._v("，经由"),t("code",[_._v("http")]),_._v("进行通信，利用"),t("code",[_._v("SSL/TLS")]),_._v("来加密数据包，提供身份认证，保护交换数据的隐私与完整性")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202112041615236.webp",alt:"img"}})]),_._v(" "),t("p",[t("code",[_._v("http")]),_._v("协议采用明文传输，存在信息窃听，信息篡改，信息劫持的风险，而"),t("code",[_._v("tls/ssl")]),_._v("具有身份认证、信息加密、完整性校验的功能")]),_._v(" "),t("p",[_._v("他新增的安全层主要是对发起的"),t("code",[_._v("http")]),_._v("请求的数据进行加密操作和对收到的"),t("code",[_._v("http")]),_._v("内容进行解密操作")]),_._v(" "),t("h2",{attrs:{id:"介绍一下tls-ssl的工作原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍一下tls-ssl的工作原理"}},[_._v("#")]),_._v(" 介绍一下"),t("code",[_._v("TLS/SSL")]),_._v("的工作原理"),t("badge",{attrs:{text:"特别重要",type:"error"}})],1),_._v(" "),t("p",[_._v("全称"),t("strong",[_._v("安全传输层协议")]),_._v(", 是介于"),t("code",[_._v("TCP和HTTP")]),_._v("之间的一层安全协议")]),_._v(" "),t("p",[_._v("主要依赖 "),t("code",[_._v("散列函数hash")]),_._v(" 对称加密 非对称加密，作用如下")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("基于"),t("strong",[_._v("散列函数")]),_._v("验证信息的完整性")])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("对称加密算法")]),_._v("采用协商的密钥对数据加密")])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("非对称加密")]),_._v("实现对身份认证和密钥协商")])])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202112041615551.webp",alt:"img"}})]),_._v(" "),t("ul",[t("li",[t("p",[t("mark",[_._v("散列函数"),t("code",[_._v("hash")])])]),_._v(" "),t("ul",[t("li",[_._v("常用的散列函数有"),t("code",[_._v("md5")]),_._v(" "),t("code",[_._v("sha1")]),_._v(" "),t("code",[_._v("sha256")]),_._v("，特点为"),t("strong",[_._v("单向不可逆")]),_._v("，对输入数据非常敏感，输出长度固定，任何数据的修改都会改变散列函数的结果，可以用于"),t("strong",[_._v("防止信息篡改并验证数据的完整性")])]),_._v(" "),t("li",[_._v("特点是在信息传输过程中，散列函数不能防止信息防篡改，由于传输的是"),t("strong",[_._v("明文")]),_._v("，中间人可以修改信息后重新计算信息的摘要，所以需要对传输的信息和"),t("strong",[_._v("信息摘要进行加密")])])])]),_._v(" "),t("li",[t("p",[t("mark",[_._v("对称加密")])]),_._v(" "),t("ul",[t("li",[_._v("加密方法是"),t("strong",[_._v("双方使用同一个密钥")]),_._v("对数据进行加密和解密，但是如何保证密钥传输的安全性，密钥可能在通过网络传输的过程中被其他人获取到")]),_._v(" "),t("li",[_._v("常见的对称加密有"),t("code",[_._v("AES-CBC")]),_._v(" "),t("code",[_._v("DES")]),_._v(" "),t("code",[_._v("3DES")]),_._v(" "),t("code",[_._v("AES-GCM")]),_._v("，通讯方式为"),t("strong",[_._v("一对一")])]),_._v(" "),t("li",[_._v("对称加密的特点就是一对一，需要共享相同的密码，密码的安全是保证信息安全的基础，"),t("strong",[_._v("服务器和"),t("code",[_._v("N")]),_._v("个客户端通信则需要维持"),t("code",[_._v("N")]),_._v("个密码记录且不能修改密码")])])])]),_._v(" "),t("li",[t("p",[t("mark",[_._v("非对称加密")])])]),_._v(" "),t("li",[t("ul",[t("li",[_._v("拥有两个密钥，一个公钥一个私钥，公钥是公开的，私钥是保密的，"),t("strong",[_._v("用私钥加密数据，用公钥才能解密")]),_._v("，"),t("strong",[_._v("用公钥加密，只有私钥才能解密")]),_._v("，任何想通信的客户端都可以用公开的公钥进行加密，然后我们用私钥进行解密，保证数据的安全，但是缺点是"),t("strong",[_._v("加密过程很慢")])]),_._v(" "),t("li",[_._v("常见的非对称加密为"),t("code",[_._v("RSA")]),_._v(" "),t("code",[_._v("ECC")]),_._v(" "),t("code",[_._v("DH")]),_._v(" "),t("strong",[_._v("，客户端之间不能相互解密信息，只能和服务器进行加密通信")]),_._v("，服务器可以实现一对多的通信，客户端可以用来验证掌握私钥的服务器的身份")])])]),_._v(" "),t("li",[t("ul",[t("li",[_._v("特点是信息"),t("strong",[_._v("一对多")]),_._v("，服务器只需要维持一个私钥就能和多个客户端进行通信，但是"),t("strong",[_._v("服务器发送出去的信息能被所有客户端解密")]),_._v("，计算复杂，加密速度慢")])])])]),_._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[_._v("综上所述")]),_._v(" "),t("p",[t("code",[_._v("tls/ssl")]),_._v("的工作方式是客户端使用非对称加密与服务器进行通信，实现身份验证并协商对称加密使用的秘钥。对称加密算法采用协商秘钥对信息以及信息摘要进行加密通信，不同节点采用对称秘钥不同，从而保证信息只能通信双方获取。")])]),_._v(" "),t("h2",{attrs:{id:"什么是数字证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是数字证书"}},[_._v("#")]),_._v(" 什么是数字证书"),t("badge",{attrs:{text:"特别重要",type:"error"}})],1),_._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[_._v("为了避免中间人攻击，我们采用数字证书")])]),_._v(" "),t("p",[_._v("使用一种"),t("code",[_._v("hash")]),_._v("算法对公钥和其他信息进行加密，生成一个"),t("strong",[_._v("信息摘要")]),_._v("，然后让有公信力的认证中心("),t("code",[_._v("CA")]),_._v(")用他的"),t("strong",[_._v("私钥对消息摘要加密")]),_._v("，形成签名，最后将"),t("strong",[_._v("原始的信息和签名")]),_._v("和在一起，称为"),t("mark",[_._v("数字证书")]),_._v("，当接收方收到数字证书先根据原始信息用相同的"),t("code",[_._v("hash")]),_._v("算法生成摘要，使用公证处的"),t("strong",[_._v("公钥对数字证书的摘要进行解密")]),_._v("，最后将解密的摘要和生成的摘要进行对比，可以发现得到的信息是否被篡改")]),_._v(" "),t("p",[_._v("最重要的是认证中心的可靠性，一般浏览器会内置一些顶层的认证中心的证书，相当我们信任了他")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202112041619455.png",alt:"img"}})]),_._v(" "),t("h2",{attrs:{id:"https的握手过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https的握手过程"}},[_._v("#")]),_._v(" "),t("code",[_._v("HTTPS")]),_._v("的握手过程"),t("badge",{attrs:{text:"特别重要",type:"error"}})],1),_._v(" "),t("p",[t("strong",[t("code",[_._v("RSA")]),_._v("握手")])]),_._v(" "),t("ol",[t("li",[_._v("客户端首先发送 "),t("code",[_._v("client_random")]),_._v("、"),t("code",[_._v("TLS")]),_._v("版本号、加密套件列表给服务器")]),_._v(" "),t("li",[_._v("服务器在接收到之后确认"),t("code",[_._v("TLS")]),_._v("版本号，同时发送"),t("code",[_._v("server_random")]),_._v("、需要使用的加密套件、自己的证书给客户端")]),_._v(" "),t("li",[_._v("客户端在收到这些信息之后，首先是会对服务器的证书进行验证，若是验证成功则会用"),t("code",[_._v("RSA")]),_._v("算法生成一个"),t("code",[_._v("pre_random")]),_._v("，且用服务器的公钥(在证书中)加密"),t("code",[_._v("pre_random")]),_._v("发送给服务器。")]),_._v(" "),t("li",[_._v("此时，客户端有了 "),t("code",[_._v("client_random")]),_._v("、"),t("code",[_._v("server_random")]),_._v("、"),t("code",[_._v("pre_random")]),_._v("，它会将这三个参数通过一个"),t("strong",[_._v("伪随机函数")]),_._v("计算得出最终的"),t("code",[_._v("secret")]),_._v("，这个"),t("code",[_._v("secret")]),_._v("就是它们后续通信所要用的对称密钥。")]),_._v(" "),t("li",[_._v("服务器接收到了刚刚用自己公钥加密的"),t("code",[_._v("pre_random")]),_._v("之后，用自己的私钥进行解密，得到里面的 "),t("code",[_._v("pre_random")]),_._v("，用和客户端一样的方式生成"),t("code",[_._v("secret")]),_._v("。")]),_._v(" "),t("li",[_._v("之后就用这个 "),t("code",[_._v("secret")]),_._v(" 对称密钥加密报文传输。")])]),_._v(" "),t("p",[t("strong",[t("code",[_._v("TLS1.2")]),_._v("的"),t("code",[_._v("ECDHE")]),_._v("握手")])]),_._v(" "),t("ol",[t("li",[t("p",[_._v("客户端在第一次发送"),t("code",[_._v("HTTPS")]),_._v("请求的时候，会把 "),t("code",[_._v("client_random")]),_._v("、"),t("code",[_._v("TLS")]),_._v("版本号、加密套件列表发送给服务器")])]),_._v(" "),t("li",[t("p",[_._v("服务器在接收到之后确认"),t("code",[_._v("TLS")]),_._v("的版本号，同时发送 "),t("code",[_._v("server_random")]),_._v("、"),t("code",[_._v("server_params")]),_._v("、需要使用的加密套件、以及自己的证书给客户端")])]),_._v(" "),t("li",[t("p",[_._v("客户端在收到这些信息之后，首先是会对服务器的证书进行验证，若是验证成功则会传递一个 "),t("code",[_._v("client_params")]),_._v(" 给服务器")]),_._v(" "),t("ul",[t("li",[_._v("与此同时客户端会通过 "),t("strong",[t("code",[_._v("ECDHE")]),_._v("算法")]),_._v(" 计算出一个"),t("code",[_._v("pre_random")]),_._v("。其中是传入了两个参数，一个是 "),t("code",[_._v("client_params")]),_._v("，还一个是 "),t("code",[_._v("server_params")]),_._v("。(也就是说："),t("code",[_._v("ECDHE(client_params, server_params) = pre_random")]),_._v(")")]),_._v(" "),t("li",[_._v("这时候客户端就同时拥有了 "),t("code",[_._v("client_random")]),_._v("、"),t("code",[_._v("server_random")]),_._v("、"),t("code",[_._v("pre_random")]),_._v("，它会将这三个参数通过一个"),t("strong",[_._v("伪随机函数")]),_._v("计算得出最终的"),t("code",[_._v("secret")]),_._v("，这个 "),t("code",[_._v("secret")]),_._v(" 就是它们后续通信所要用的对称密钥。")])])]),_._v(" "),t("li",[t("p",[_._v("而在客户端生成完"),t("code",[_._v("secret")]),_._v("之后，会给服务器发送一个收尾消息，告诉服务器之后都要用对称加密，且对称加密的算法是用第一次约定好的。")])]),_._v(" "),t("li",[t("p",[_._v("服务器它在接收到刚刚传递过来的"),t("code",[_._v("client_params")]),_._v("之后，也会使用和客户端一样的方式生成"),t("code",[_._v("secret")]),_._v("，并且也会发送一个收尾消息给客户端。")])]),_._v(" "),t("li",[t("p",[_._v("当双方都收到收尾消息并验证成功之后，握手就结束了。后面开始用这个"),t("code",[_._v("secret")]),_._v("对称密钥加密报文进行传输。")])])]),_._v(" "),t("p",[_._v("（"),t("code",[_._v("ECDHE")]),_._v("基于"),t("strong",[_._v("椭圆曲线离散对数")]),_._v("，传入的两个参数也被叫做"),t("strong",[_._v("椭圆曲线的公钥")]),_._v("）")]),_._v(" "),t("h2",{attrs:{id:"ecdhe握手和rsa握手又有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ecdhe握手和rsa握手又有什么区别"}},[_._v("#")]),_._v(" "),t("code",[_._v("ECDHE")]),_._v("握手和"),t("code",[_._v("RSA")]),_._v("握手又有什么区别")]),_._v(" "),t("ol",[t("li",[t("strong",[_._v("生成"),t("code",[_._v("secret")]),_._v("(对称密钥)的过程不同")]),_._v("。\n"),t("ul",[t("li",[t("code",[_._v("RSA")]),_._v("中是使用"),t("code",[_._v("RSA")]),_._v("算法生成一个"),t("code",[_._v("pre_random")]),_._v("并用服务器的公钥加"),t("code",[_._v("pre_random")]),_._v("发送给服务器，然后各自用伪随机函数生成相同的"),t("code",[_._v("secret")]),_._v("对称密钥；")]),_._v(" "),t("li",[_._v("而在"),t("code",[_._v("ECDHE")]),_._v("握手中，它没有用到"),t("code",[_._v("RSA")]),_._v("算法，而是用"),t("code",[_._v("ECDHE")]),_._v("算法生成的"),t("code",[_._v("pre_random")]),_._v("，且这个过程中比"),t("code",[_._v("RSA")]),_._v("多了"),t("code",[_._v("client_params")]),_._v("和"),t("code",[_._v("server_params")]),_._v("两个参数。")])])]),_._v(" "),t("li",[_._v("在生成完"),t("code",[_._v("secret")]),_._v("之后，"),t("code",[_._v("ECDHE")]),_._v("握手在客户端发送完收尾消息后可以提前"),t("code",[_._v("抢跑")]),_._v("，直接发送 "),t("code",[_._v("HTTP")]),_._v(" 报文，节省了一个 "),t("code",[_._v("RTT")]),_._v("，不必等到收尾消息到达服务器，然后等服务器返回收尾消息给自己，直接开始发请求。这也叫"),t("code",[_._v("TLS False Start")]),_._v("。")]),_._v(" "),t("li",[_._v("最主要的："),t("code",[_._v("RSA")]),_._v("不具备向前安全性，而"),t("code",[_._v("ECDHE")]),_._v("具有向前安全性")])]),_._v(" "),t("p",[_._v("（向前安全性：一次破解并不影响历史信息的性质就是向前安全性）")]),_._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[_._v("向前安全性")]),_._v(" "),t("p",[_._v("一句话概括：一次破解并不影响历史信息的性质就是向前安全性。")]),_._v(" "),t("p",[_._v("比如在"),t("code",[_._v("RSA")]),_._v("握手的过程中，客户端拿到了服务端的公钥，然后用此公钥加密"),t("code",[_._v("pre_random")]),_._v("给服务端。如果此时有第三方有服务端的私钥，并且截获了之前所有报文的时候，那么它就可以破解这段密文并拿到"),t("code",[_._v("pre_random")]),_._v("、"),t("code",[_._v("client_random")]),_._v("、"),t("code",[_._v("server_random")]),_._v("并根据对应的伪随机函数生成"),t("code",[_._v("secret")]),_._v("，即拿到了最终通信的对称密钥，每一个历史报文都能通过这样的方式进行破解。它就不具有向前安全性。")]),_._v(" "),t("p",[_._v("但是"),t("code",[_._v("ECDHE")]),_._v("在每次握手的时候都会产生"),t("strong",[_._v("一个临时的密钥对")]),_._v("(也就是"),t("code",[_._v("client_params")]),_._v("、"),t("code",[_._v("server_params")]),_._v(")，即使第三方有了私钥能破解，但是对之前的历史报文并没有影响。它就具有向前安全性。")])]),_._v(" "),t("h2",{attrs:{id:"tls1-3版本较tls1-2的改进"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tls1-3版本较tls1-2的改进"}},[_._v("#")]),_._v(" "),t("code",[_._v("TLS1.3")]),_._v("版本较"),t("code",[_._v("TLS1.2")]),_._v("的改进")]),_._v(" "),t("ol",[t("li",[_._v("强化安全")])]),_._v(" "),t("p",[_._v("废除了很多的加密算法，只保留了"),t("code",[_._v("5")]),_._v("个加密套件。其中最主要的是废弃了"),t("code",[_._v("RSA")]),_._v("，因为在"),t("code",[_._v("2015")]),_._v("年发现了"),t("code",[_._v("PRAEK")]),_._v("攻击，即已经有人发现了"),t("code",[_._v("RSA")]),_._v("的漏洞能进行破解；而且"),t("code",[_._v("RSA")]),_._v("不具备向前安全性。")]),_._v(" "),t("ol",[t("li",[_._v("提高性能")])]),_._v(" "),t("p",[_._v("同时利用会话复用节省了重新生成密钥的时间，利用 "),t("code",[_._v("PSK")]),_._v(" 做到了"),t("code",[_._v("0-RTT")]),_._v("连接。")]),_._v(" "),t("h2",{attrs:{id:"ssl连接断开后如何恢复"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssl连接断开后如何恢复"}},[_._v("#")]),_._v(" "),t("code",[_._v("SSL")]),_._v("连接断开后如何恢复")]),_._v(" "),t("p",[_._v("一共有两种方法来恢复断开的 "),t("code",[_._v("SSL")]),_._v(" 连接，一种是使用 "),t("code",[_._v("session ID")]),_._v("，一种是 "),t("code",[_._v("session ticket")]),_._v("。")]),_._v(" "),t("p",[t("strong",[_._v("通过"),t("code",[_._v("session ID")])])]),_._v(" "),t("p",[_._v("使用 "),t("code",[_._v("session ID")]),_._v(" 的方式，"),t("strong",[_._v("每一次的会话都有一个编号")]),_._v("，当对话中断后，下一次重新连接时，只要客户端给出这个编号，服务器如果有这个编号的记录，那么双方就可以继续使用以前的秘钥，而不用重新生成一把。目前所有的浏览器都支持这一种方法。但是这种方法有一个缺点是，"),t("code",[_._v("session ID")]),_._v(" 只能够存在一台服务器上，如果我们的请求通过负载平衡被转移到了其他的服务器上，那么就无法恢复对话。")]),_._v(" "),t("p",[t("strong",[_._v("通过"),t("code",[_._v("session ticket")])])]),_._v(" "),t("p",[_._v("另一种方式是 "),t("code",[_._v("session ticket")]),_._v(" 的方式，"),t("code",[_._v("session ticket")]),_._v(" 是服务器在上一次对话中发送给客户的，这个 "),t("code",[_._v("ticket")]),_._v(" 是加密的，只有服务器能够解密，里面包含了本次会话的信息，比如对话秘钥和加密方法等。这样不管我们的请求是否转移到其他的服务器上，当服务器将 "),t("code",[_._v("ticket")]),_._v(" 解密以后，就能够获取上次对话的信息，就不用重新生成对话秘钥了。")]),_._v(" "),t("h2",{attrs:{id:"https的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https的特点"}},[_._v("#")]),_._v(" "),t("code",[_._v("HTTPS")]),_._v("的特点"),t("badge",{attrs:{text:"重要",type:"warning"}})],1),_._v(" "),t("p",[t("mark",[_._v("优点")])]),_._v(" "),t("ul",[t("li",[t("p",[_._v("可以"),t("strong",[_._v("认证用户和服务器")]),_._v(" 确保数据可以正确发送到客户端和服务端")])]),_._v(" "),t("li",[t("p",[_._v("可以"),t("strong",[_._v("加密传输")]),_._v(" "),t("strong",[_._v("身份认证")]),_._v(" 防止数据在传输过程中被窃取 修改 确保数据安全性")])]),_._v(" "),t("li",[t("p",[_._v("不是绝对的安全，但是"),t("strong",[_._v("大幅增加中间人攻击的成本")])])])]),_._v(" "),t("p",[t("mark",[_._v("缺点")])]),_._v(" "),t("ul",[t("li",[t("p",[_._v("需要做服务器和客户端双方的加密和解密处理，"),t("strong",[_._v("耗费更多服务器资源")]),_._v("，过程复杂")])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("握手阶段比较费时")]),_._v("，增加页面的加载时间")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("ssl")]),_._v("证书收费 功能越强大费用越高")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("https")]),_._v("连接服务端资源占用高很多，支持访客稍多的网站需要投入更大成本")])]),_._v(" "),t("li",[t("p",[t("strong",[t("code",[_._v("ssl")]),_._v("证书需要绑定"),t("code",[_._v("ip")]),_._v("，不能在同一"),t("code",[_._v("ip")]),_._v("上绑定多个域名")])])])]),_._v(" "),t("h2",{attrs:{id:"https如何保证安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https如何保证安全"}},[_._v("#")]),_._v(" https如何保证安全"),t("badge",{attrs:{text:"重要",type:"warning"}})],1),_._v(" "),t("p",[_._v("先理解对称加密和非对称加密")]),_._v(" "),t("ul",[t("li",[_._v("对称加密为通信的双方都使用同一个密钥进行加解密，对称加密虽然简单性能好，但是无法解决首次把秘钥发给对方的问题，易被黑客拦截")]),_._v(" "),t("li",[_._v("非对称加密\n"),t("ul",[t("li",[t("strong",[_._v("私钥 + 公钥 = 秘钥对")])]),_._v(" "),t("li",[_._v("私钥加密只能公钥解密 公钥加密只能私钥解密")]),_._v(" "),t("li",[_._v("通信之前对方把自己的公钥先发给对方")]),_._v(" "),t("li",[_._v("对方拿着公钥加密数据响应对方 等到数据传输到对方，对方再用自己的私钥进行解密")]),_._v(" "),t("li",[_._v("安全性高 但是速度慢 影响性能")])])])]),_._v(" "),t("p",[t("mark",[_._v("解决方案")])]),_._v(" "),t("p",[_._v("结合两种加密方式 将对称加密的密钥通过非对称加密的公钥进行加密，然后发送出去，接收方通过自己的私钥进行解密，获得对称加密的密钥，然后双方可以使用对称加密进行沟通")]),_._v(" "),t("p",[_._v("但是如果中间人 把互发的公钥换成自己的公钥就可以轻松解密通信双方发送的数据了")]),_._v(" "),t("p",[_._v("所以要有"),t("code",[_._v("ca")]),_._v("证书，防止中间人攻击")]),_._v(" "),t("p",[_._v("如果中间人篡改了证书，是不是身份证明无效了，这时候需要新的技术，数字签名")]),_._v(" "),t("p",[t("strong",[_._v("数字签名")]),_._v("是"),t("code",[_._v("ca")]),_._v("自带的"),t("code",[_._v("hash")]),_._v("算法对证书的内容进行"),t("code",[_._v("hash")]),_._v("得到一个摘要，再用"),t("code",[_._v("ca")]),_._v("的密钥进行加密，最后组成数字签名，当别人收到证书的时候，用同样的"),t("code",[_._v("hash")]),_._v("算法再次生成摘要，用"),t("code",[_._v("ca")]),_._v("的公钥对数字签名解密，得到"),t("code",[_._v("ca")]),_._v("创建的消息摘要，然后对比可知有没有被篡改")]),_._v(" "),t("h2",{attrs:{id:"题外话-如何在html中将http请求转换成https"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题外话-如何在html中将http请求转换成https"}},[_._v("#")]),_._v(" 题外话：如何在"),t("code",[_._v("html")]),_._v("中将"),t("code",[_._v("http")]),_._v("请求转换成"),t("code",[_._v("https")])]),_._v(" "),t("p",[_._v("利用"),t("code",[_._v("meta")]),_._v("标签把"),t("code",[_._v("http")]),_._v("请求换为"),t("code",[_._v("https")]),_._v(":")]),_._v(" "),t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("<")]),_._v("meta")]),_._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[_._v("http-equiv")]),_._v(" "),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[_._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v('"')]),_._v("Content-Security-Policy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v('"')])]),_._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[_._v("content")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[_._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v('"')]),_._v("upgrade-insecure-requests"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(">")])]),_._v("\n")])]),_._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[_._v("1")]),t("br")])])])}),[],!1,null,null,null);v.default=s.exports}}]);