(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{464:function(v,_,e){"use strict";e.r(_);var t=e(26),s=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"常见的http请求方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见的http请求方法"}},[v._v("#")]),v._v(" 常见的"),e("code",[v._v("HTTP")]),v._v("请求方法"),e("badge",{attrs:{text:"重要",type:"warning"}})],1),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("get")]),v._v(" 向服务器获取数据")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("post")]),v._v(" 将实体提交给指定的资源，通常造成服务器资源修改")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("put")]),v._v("上传文件，更新数据")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("delete")]),v._v(" 删除服务器上面的对象")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("head")]),v._v(" 获取报文首部，与"),e("code",[v._v("get")]),v._v("相比不返回报文主体部分")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("options")]),v._v("：询问支持的请求方法，用来跨域请求")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("connect")]),v._v(" 要求在与代理服务器通信时建立隧道，使用隧道进行"),e("code",[v._v("tcp")]),v._v("通信")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("trace")]),v._v(" 回显服务器收到的请求，主要用于测试或诊断")])])]),v._v(" "),e("h2",{attrs:{id:"get和post的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get和post的区别"}},[v._v("#")]),v._v(" "),e("code",[v._v("get")]),v._v("和"),e("code",[v._v("post")]),v._v("的区别"),e("badge",{attrs:{text:"特别重要",type:"error"}})],1),v._v(" "),e("ul",[e("li",[e("p",[e("strong",[v._v("应用场景不同：")]),v._v(" 一般"),e("code",[v._v("get")]),v._v("请求用于服务器资源不会产生影响，比如请求一个网页的资源，但是"),e("code",[v._v("post")]),v._v("会对服务器产生影响，比如注册用户之类的")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("缓存不同：")]),v._v(" 浏览器一般会对"),e("code",[v._v("get")]),v._v("请求缓存，一般不会对"),e("code",[v._v("post")]),v._v("请求缓存")]),v._v(" "),e("ul",[e("li",[v._v("可以在"),e("code",[v._v("url")]),v._v("后面拼接时间戳")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("发送的报文格式不同：")]),v._v(" "),e("code",[v._v("get")]),v._v("请求的报文实体为空，"),e("code",[v._v("post")]),v._v("请求的报文实体一般为向服务器发送的数据")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("幂等：")]),e("code",[v._v("get")]),v._v("是幂等的，"),e("code",[v._v("post")]),v._v("不是("),e("code",[v._v("幂等")]),v._v("表示执行相同的操作，结果也是相同的)")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("安全性不同")]),v._v("： "),e("code",[v._v("get")]),v._v("将参数放在"),e("code",[v._v("url")]),v._v("的后面，"),e("code",[v._v("post")]),v._v("传递的参数不在"),e("code",[v._v("query")]),v._v("上面")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("请求长度：")]),v._v(" 浏览器对"),e("code",[v._v("url")]),v._v("的长度有限制，会影响"),e("code",[v._v("get")]),v._v("请求发送数据的长度")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("post")]),v._v("支持更多的数据类型的数据")])]),v._v(" "),e("li",[e("p",[e("strong",[e("code",[v._v("POST")]),v._v("会产生两个"),e("code",[v._v("TCP")]),v._v("数据包")]),v._v("：对于"),e("code",[v._v("GET")]),v._v("方式的请求，浏览器会把"),e("code",[v._v("http header")]),v._v("和"),e("code",[v._v("data")]),v._v("一并发送出去，服务器响应"),e("code",[v._v("200")]),v._v("（返回数据）；而对于"),e("code",[v._v("POST")]),v._v("，浏览器先发送"),e("code",[v._v("header")]),v._v("，服务器响应"),e("code",[v._v("100 continue")]),v._v("，浏览器再发送"),e("code",[v._v("data")]),v._v("，服务器响应"),e("code",[v._v("200 ok")]),v._v("（返回数据）。也就是"),e("code",[v._v("post")]),v._v("请求，第一次将"),e("code",[v._v("header")]),v._v("发送过去，确认服务器和网络没问题可以服务，才会将真正的"),e("code",[v._v("data")]),v._v("数据提交。 因为"),e("code",[v._v("POST")]),v._v("需要两步，时间上消耗的要多一点")])])]),v._v(" "),e("h2",{attrs:{id:"post和put的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#post和put的区别"}},[v._v("#")]),v._v(" "),e("code",[v._v("post")]),v._v("和"),e("code",[v._v("put")]),v._v("的区别")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("put")]),v._v("向服务端发送数据，但不会增加数据的种类，无论进行多少次"),e("code",[v._v("put")]),v._v("，结果并没有什么不同(理解为更新数据)")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("post")]),v._v("向服务端发送请求，会改变数据的种类，可以理解为创建数据")])])]),v._v(" "),e("h2",{attrs:{id:"对-accept-系列字段了解多少"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对-accept-系列字段了解多少"}},[v._v("#")]),v._v(" 对 "),e("code",[v._v("Accept")]),v._v(" 系列字段了解多少？")]),v._v(" "),e("p",[v._v("四个部分: "),e("strong",[v._v("数据格式")]),v._v("、"),e("strong",[v._v("压缩方式")]),v._v("、"),e("strong",[v._v("支持语言")]),v._v("和"),e("strong",[v._v("字符集")])]),v._v(" "),e("p",[e("strong",[v._v("数据格式")])]),v._v(" "),e("p",[v._v("客户端支持格式： "),e("strong",[e("code",[v._v("MIME")])]),v._v(" ("),e("code",[v._v("Multipurpose Internet Mail Extensions")]),v._v(", "),e("strong",[v._v("多用途互联网邮件扩展")]),v._v(")。它首先用在电子邮件系统中，让邮件可以发任意类型的数据，这对于 "),e("code",[v._v("HTTP")]),v._v(" 来说也是通用的。")]),v._v(" "),e("p",[v._v("因此，"),e("code",[v._v("HTTP")]),v._v(" 从 "),e("strong",[e("code",[v._v("MIME type")])]),v._v(" 取了一部分来标记报文 "),e("code",[v._v("body")]),v._v(" 部分的数据类型，这些类型体现在"),e("code",[v._v("Content-Type")]),v._v("这个字段，当然这是针对于发送端而言，接收端想要收到特定类型的数据，也可以用"),e("code",[v._v("Accept")]),v._v("字段。")]),v._v(" "),e("p",[v._v("具体而言，这两个字段的取值可以分为下面几类:")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("text： text/html, text/plain, text/css")]),v._v(" 等")]),v._v(" "),e("li",[e("code",[v._v("image: image/gif, image/jpeg, image/png")]),v._v(" 等")]),v._v(" "),e("li",[e("code",[v._v("audio/video: audio/mpeg, video/mp4")]),v._v(" 等")]),v._v(" "),e("li",[e("code",[v._v("application: application/json, application/javascript")]),v._v(", "),e("code",[v._v("application/pdf, application/octet-stream")])])]),v._v(" "),e("p",[e("strong",[v._v("压缩方式")])]),v._v(" "),e("p",[v._v("压缩方式体现在发送方的"),e("code",[v._v("Content-Encoding")]),v._v("字段上， 同样的，接收什么样的压缩方式体现在了接受方的"),e("code",[v._v("Accept-Encoding")]),v._v("字段上。这个字段的取值有下面几种：")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("gzip")]),v._v(": 当今最流行的压缩格式")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("deflate")]),v._v(": 另外一种著名的压缩格式")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("br")]),v._v(": 一种专门为 "),e("code",[v._v("HTTP")]),v._v(" 发明的压缩算法")])])]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("// 发送端\nContent-Encoding: gzip\n// 接收端\nAccept-Encoding: gzip\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br"),e("span",{staticClass:"line-number"},[v._v("4")]),e("br")])]),e("p",[e("strong",[v._v("支持语言")])]),v._v(" "),e("p",[v._v("对于发送方而言，还有一个"),e("code",[v._v("Content-Language")]),v._v("字段，在需要实现国际化的方案当中，可以用来指定支持的语言，在接受方对应的字段为"),e("code",[v._v("Accept-Language")]),v._v("。如:")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("// 发送端\nContent-Language: zh-CN, zh, en\n// 接收端\nAccept-Language: zh-CN, zh, en\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br"),e("span",{staticClass:"line-number"},[v._v("4")]),e("br")])]),e("p",[e("strong",[v._v("字符集")])]),v._v(" "),e("p",[v._v("最后是一个比较特殊的字段, 在接收端对应为"),e("code",[v._v("Accept-Charset")]),v._v("，指定可以接受的字符集，而在发送端并没有对应的"),e("code",[v._v("Content-Charset")]),v._v(", 而是直接放在了"),e("code",[v._v("Content-Type")]),v._v("中，以 "),e("strong",[e("code",[v._v("charset")])]),v._v(" 属性指定。如:")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("// 发送端\nContent-Type: text/html; charset=utf-8\n// 接收端\nAccept-Charset: charset=utf-8\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br"),e("span",{staticClass:"line-number"},[v._v("4")]),e("br")])]),e("p",[v._v("最后以一张图来总结一下吧:")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202203041123404.awebp",alt:"img"}})]),v._v(" "),e("h2",{attrs:{id:"常见的content-type有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见的content-type有哪些"}},[v._v("#")]),v._v(" 常见的"),e("code",[v._v("content-type")]),v._v("有哪些"),e("badge",{attrs:{text:"重要",type:"warning"}})],1),v._v(" "),e("ol",[e("li",[e("p",[e("code",[v._v("application/x-www-form-urlencoded")]),v._v("按照"),e("code",[v._v("key=value&key=value")]),v._v("进行编码")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("multipart/form-data")]),v._v(" 通常用表单上传文件")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("application/json")]),v._v(" 服务器消息主体是序列化的"),e("code",[v._v("JSON")]),v._v("字符串")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("text/xml")]),v._v(" 主要提交"),e("code",[v._v("xml")]),v._v("格式数据")])])]),v._v(" "),e("h2",{attrs:{id:"对于定长和不定长的数据-http-是怎么传输的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对于定长和不定长的数据-http-是怎么传输的"}},[v._v("#")]),v._v(" 对于定长和不定长的数据，"),e("code",[v._v("HTTP")]),v._v(" 是怎么传输的？")]),v._v(" "),e("p",[e("strong",[v._v("定长包体")])]),v._v(" "),e("p",[v._v("对于定长包体而言，发送端在传输的时候一般会带上 "),e("code",[v._v("Content-Length")]),v._v(", 来指明包体的长度。")]),v._v(" "),e("p",[v._v("如果设置长度小了，在"),e("code",[v._v("http")]),v._v("响应体中直接被截去，如果设置长度大了，"),e("code",[v._v("http")]),v._v("会导致传输失败，显示意外终止连接")]),v._v(" "),e("p",[e("strong",[v._v("不定长包体")])]),v._v(" "),e("p",[v._v("上述是针对于"),e("code",[v._v("定长包体")]),v._v("，那么对于"),e("code",[v._v("不定长包体")]),v._v("而言是如何传输的呢？")]),v._v(" "),e("p",[v._v("这里就必须介绍另外一个 "),e("code",[v._v("http")]),v._v(" 头部字段了:")]),v._v(" "),e("div",{staticClass:"language-http line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Transfer-Encoding:")]),v._v(" chunked\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("表示分块传输数据，设置这个字段后会自动产生两个效果:")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("Content-Length")]),v._v(" 字段会被忽略")]),v._v(" "),e("li",[v._v("基于长连接持续推送动态内容")])]),v._v(" "),e("p",[v._v("响应体的结构如下所示:")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("chunk长度(16进制的数)\n第一个chunk的内容\nchunk长度(16进制的数)\n第二个chunk的内容\n......\n0\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br"),e("span",{staticClass:"line-number"},[v._v("4")]),e("br"),e("span",{staticClass:"line-number"},[v._v("5")]),e("br"),e("span",{staticClass:"line-number"},[v._v("6")]),e("br")])]),e("p",[v._v("最后是留有有一个"),e("code",[v._v("空行")]),v._v("的")]),v._v(" "),e("h2",{attrs:{id:"http-如何处理大文件的传输"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-如何处理大文件的传输"}},[v._v("#")]),v._v(" "),e("code",[v._v("HTTP")]),v._v(" 如何处理大文件的传输？")]),v._v(" "),e("p",[e("code",[v._v("HTTP")]),v._v("采取了"),e("code",[v._v("范围请求")]),v._v("的解决方案，允许客户端仅仅请求一个资源的一部分。")]),v._v(" "),e("p",[v._v("当然，前提是服务器要支持"),e("strong",[v._v("范围请求")]),v._v("，要支持这个功能，就必须加上这样一个响应头:")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("Accept-Ranges: none\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("用来告知客户端这边是支持范围请求的。")]),v._v(" "),e("p",[e("strong",[e("code",[v._v("Range")]),v._v(" 字段拆解")])]),v._v(" "),e("p",[v._v("而对于客户端而言，它需要指定请求哪一部分，通过"),e("code",[v._v("Range")]),v._v("这个请求头字段确定，格式为"),e("code",[v._v("bytes=x-y")]),v._v("。接下来就来讨论一下这个 "),e("code",[v._v("Range")]),v._v(" 的书写格式:")]),v._v(" "),e("ul",[e("li",[e("strong",[e("code",[v._v("0-499")])]),v._v(" 表示从开始到第 "),e("code",[v._v("499")]),v._v(" 个字节。")]),v._v(" "),e("li",[e("strong",[e("code",[v._v("500-")])]),v._v("  表示从第 "),e("code",[v._v("500")]),v._v(" 字节到文件终点。")]),v._v(" "),e("li",[e("strong",[e("code",[v._v("-100")])]),v._v(" 表示文件的最后"),e("code",[v._v("100")]),v._v("个字节。")])]),v._v(" "),e("p",[v._v("服务器收到请求之后，首先验证范围"),e("strong",[v._v("是否合法")]),v._v("，如果越界了那么返回"),e("code",[v._v("416")]),v._v("错误码，否则读取相应片段，返回 "),e("strong",[e("code",[v._v("206")]),v._v("状态码。")])]),v._v(" "),e("p",[v._v("同时，服务器需要添加"),e("code",[v._v("Content-Range")]),v._v("字段，这个字段的格式根据请求头中"),e("code",[v._v("Range")]),v._v("字段的不同而有所差异。")]),v._v(" "),e("p",[v._v("具体来说，请求"),e("code",[v._v("单段数据")]),v._v("和请求"),e("code",[v._v("多段数据")]),v._v("，响应头是不一样的。")]),v._v(" "),e("p",[v._v("举个例子:")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("// 单段数据\nRange: bytes=0-9\n// 多段数据\nRange: bytes=0-9, 30-39\n\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br"),e("span",{staticClass:"line-number"},[v._v("4")]),e("br"),e("span",{staticClass:"line-number"},[v._v("5")]),e("br")])]),e("p",[v._v("接下来我们就分别来讨论着两种情况。")]),v._v(" "),e("p",[e("strong",[v._v("单段数据")])]),v._v(" "),e("p",[v._v("对于"),e("code",[v._v("单段数据")]),v._v("的请求，返回的响应如下:")]),v._v(" "),e("div",{staticClass:"language-http line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token response-status"}},[e("span",{pre:!0,attrs:{class:"token http-version property"}},[v._v("HTTP/1.1")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token status-code number"}},[v._v("206")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token reason-phrase string"}},[v._v("Partial Content")])]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Content-Length:")]),v._v(" 10\n"),e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Accept-Ranges:")]),v._v(" bytes\n"),e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Content-Range:")]),v._v(" bytes 0-9/100\n\ni am xxxxx\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br"),e("span",{staticClass:"line-number"},[v._v("4")]),e("br"),e("span",{staticClass:"line-number"},[v._v("5")]),e("br"),e("span",{staticClass:"line-number"},[v._v("6")]),e("br")])]),e("p",[v._v("值得注意的是"),e("code",[v._v("Content-Range")]),v._v("字段，"),e("code",[v._v("0-9")]),v._v("表示请求的返回，"),e("code",[v._v("100")]),v._v("表示资源的总大小，很好理解。")]),v._v(" "),e("p",[e("strong",[v._v("多段数据")])]),v._v(" "),e("p",[v._v("接下来我们看看多段请求的情况。得到的响应会是下面这个形式:")]),v._v(" "),e("div",{staticClass:"language-http line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token response-status"}},[e("span",{pre:!0,attrs:{class:"token http-version property"}},[v._v("HTTP/1.1")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token status-code number"}},[v._v("206")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token reason-phrase string"}},[v._v("Partial Content")])]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Content-Type:")]),v._v(" multipart/byteranges; boundary=00000010101\n"),e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Content-Length:")]),v._v(" 189\n"),e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Connection:")]),v._v(" keep-alive\n"),e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Accept-Ranges:")]),v._v(" bytes\n\n\n--00000010101\n"),e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Content-Type:")]),v._v(" text/plain\n"),e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Content-Range:")]),v._v(" bytes 0-9/96\n\ni am xxxxx\n--00000010101\n"),e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Content-Type:")]),v._v(" text/plain\n"),e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Content-Range:")]),v._v(" bytes 20-29/96\n\neex jspy e\n--00000010101--\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br"),e("span",{staticClass:"line-number"},[v._v("4")]),e("br"),e("span",{staticClass:"line-number"},[v._v("5")]),e("br"),e("span",{staticClass:"line-number"},[v._v("6")]),e("br"),e("span",{staticClass:"line-number"},[v._v("7")]),e("br"),e("span",{staticClass:"line-number"},[v._v("8")]),e("br"),e("span",{staticClass:"line-number"},[v._v("9")]),e("br"),e("span",{staticClass:"line-number"},[v._v("10")]),e("br"),e("span",{staticClass:"line-number"},[v._v("11")]),e("br"),e("span",{staticClass:"line-number"},[v._v("12")]),e("br"),e("span",{staticClass:"line-number"},[v._v("13")]),e("br"),e("span",{staticClass:"line-number"},[v._v("14")]),e("br"),e("span",{staticClass:"line-number"},[v._v("15")]),e("br"),e("span",{staticClass:"line-number"},[v._v("16")]),e("br"),e("span",{staticClass:"line-number"},[v._v("17")]),e("br"),e("span",{staticClass:"line-number"},[v._v("18")]),e("br")])]),e("p",[v._v("这个时候出现了一个非常关键的字段"),e("code",[v._v("Content-Type: multipart/byteranges;boundary=00000010101")]),v._v("，它代表了信息量是这样的:")]),v._v(" "),e("ul",[e("li",[v._v("请求一定是多段数据请求")]),v._v(" "),e("li",[v._v("响应体中的分隔符是 "),e("code",[v._v("00000010101")])])]),v._v(" "),e("p",[v._v("因此，在响应体中各段数据之间会由这里指定的分隔符分开，而且在最后的分隔末尾添上"),e("code",[v._v("--")]),v._v("表示结束。")]),v._v(" "),e("h2",{attrs:{id:"介绍一下options请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍一下options请求"}},[v._v("#")]),v._v(" 介绍一下"),e("code",[v._v("options")]),v._v("请求"),e("badge",{attrs:{text:"重要",type:"warning"}})],1),v._v(" "),e("p",[e("code",[v._v("options")]),v._v("的用途主要有两个")]),v._v(" "),e("ul",[e("li",[v._v("获取服务器支持的所有"),e("code",[v._v("http")]),v._v("请求方法")]),v._v(" "),e("li",[v._v("用于检查访问权限，比如在进行"),e("code",[v._v("cors")]),v._v("跨域资源共享的时候，对于复杂请求，就是使用"),e("code",[v._v("options")]),v._v("方法发送嗅探请求，判断是否有权限访问指定的资源")])]),v._v(" "),e("h2",{attrs:{id:"http1-0和http1-1之间有哪些区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http1-0和http1-1之间有哪些区别"}},[v._v("#")]),v._v(" "),e("code",[v._v("http1.0")]),v._v("和"),e("code",[v._v("http1.1")]),v._v("之间有哪些区别"),e("badge",{attrs:{text:"非常重要",type:"error"}})],1),v._v(" "),e("ul",[e("li",[e("p",[e("strong",[v._v("连接方面")]),v._v("："),e("code",[v._v("http1.0")]),v._v("默认支持非持久连接，而"),e("code",[v._v("http1.1")]),v._v("默认支持持久连接，"),e("code",[v._v("http1.1")]),v._v("通过使用持久连接来使多个"),e("code",[v._v("http")]),v._v("请求复用同一个"),e("code",[v._v("tcp")]),v._v("连接，避免使用非持久连接每次需要建立的时延")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("资源请求方面")]),v._v("："),e("code",[v._v("http1.0")]),v._v("方面存在浪费带宽(客户端只是需要某个对象的一部分，但是服务器却将整个对象送来了，并且不支持断点续传功能)，"),e("code",[v._v("http1.1")]),v._v("在请求头引入"),e("code",[v._v("range")]),v._v("头域，它允许之请求资源的某个部分，即返回码是"),e("code",[v._v("206(partial content)")]),v._v("，便于开发者自由选择充分利用带宽")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("缓存方面")]),v._v("：在"),e("code",[v._v("http1.0")]),v._v("主要使用"),e("code",[v._v("header")]),v._v("里的"),e("code",[v._v("cache-control")]),v._v("、"),e("code",[v._v("expire")]),v._v("作为缓存标准判断，"),e("code",[v._v("http1.1")]),v._v("加入了"),e("code",[v._v("Etag、If-none-match")]),v._v(" "),e("code",[v._v("Last-Modified、If-Modified-Since")]),v._v("等更多可供选择的缓存头来控制缓存策略")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("http1.1")]),v._v("新增 "),e("strong",[e("code",[v._v("host")]),v._v("字段")]),v._v(",用来指定服务器的域名，"),e("code",[v._v("http1.0")]),v._v("认为每台服务器都绑定一个唯一的"),e("code",[v._v("ip")]),v._v("，所以请求"),e("code",[v._v("url")]),v._v("没有传递主机名，但是随着技术发展，在一台物理机器可以存在多台虚拟主机，共享同一个"),e("code",[v._v("ip")]),v._v("地址，这样可以将请求发往同一台服务器的不同网站")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("1.1新增"),e("code",[v._v("put、head、options")]),v._v("等方法")])])])]),v._v(" "),e("h2",{attrs:{id:"http1-1和2-0的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http1-1和2-0的区别"}},[v._v("#")]),v._v(" "),e("code",[v._v("http1.1")]),v._v("和"),e("code",[v._v("2.0")]),v._v("的区别"),e("badge",{attrs:{text:"非常重要",type:"error"}})],1),v._v(" "),e("ul",[e("li",[e("p",[e("strong",[v._v("二进制编码")]),v._v("："),e("code",[v._v("2.0")]),v._v("是一个二进制协议，在"),e("code",[v._v("1.1")]),v._v("版本中，报文头信息必须是文本("),e("code",[v._v("ASCII编码")]),v._v(")，数据可以是文本，也可以是二进制，"),e("code",[v._v("2.0")]),v._v("的头信息和数据体都是"),e("strong",[v._v("二进制")]),v._v("，统称为"),e("strong",[v._v("帧")]),v._v("，分为"),e("strong",[v._v("头信息帧")]),v._v("(存放头部字段)和"),e("strong",[v._v("数据帧")]),v._v("(存放请求体数据)，都是乱序的二进制帧，不存在先后关系不需要排队。")]),v._v(" "),e("ul",[e("li",[v._v("乱序的二进制帧如何组装成对应报文：\n"),e("ul",[e("li",[v._v("所谓的乱序，指的是不同"),e("code",[v._v("ID")]),v._v("的"),e("code",[v._v("Stream")]),v._v("是乱序的，对于同一个"),e("code",[v._v("Stream ID")]),v._v("的帧是按顺序传输的。")]),v._v(" "),e("li",[v._v("接收方收到二进制帧后，将相同的"),e("code",[v._v("Stream ID")]),v._v("组装成完整的请求报文和响应报文。")]),v._v(" "),e("li",[v._v("二进制帧中有一些字段，控制着"),e("code",[v._v("优先级")]),v._v("和"),e("code",[v._v("流量控制")]),v._v("等功能，这样子的话，就可以设置数据帧的优先级，让服务器处理重要资源，优化用户体验。")])])])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("多路复用")]),v._v("："),e("code",[v._v("2.0")]),v._v("实现多路复用，复用"),e("code",[v._v("tcp")]),v._v("连接，但在一个连接里面客户端和服务端可以同时发送多个请求或响应，而且不用按照顺序一一发送，避免了"),e("strong",[v._v("队头堵塞")]),v._v("的问题")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("数据流")]),v._v("："),e("code",[v._v("2.0")]),v._v("采用了数据流的概念，因为前面的多路复用讲了，不用按顺序，所以同一个连接里面的数据包，可能属于不同的请求，所以要对数据包做标记，指出他属于哪一个请求。"),e("code",[v._v("2.0")]),v._v("将每个请求或回应的所有数据包称为一个数据流，都有一个 "),e("strong",[v._v("独特的编号"),e("code",[v._v("Stream ID")])]),v._v(" ，数据包发送时候，都必须标记数据流"),e("code",[v._v("id")]),v._v("，来区分属于哪个数据流")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("头信息压缩")]),v._v("：因为"),e("code",[v._v("1.1")]),v._v("协议不带状态，每次请求都得附上所有信息，请求很多字段都是重复的，比如"),e("code",[v._v("cookies")]),v._v("和"),e("code",[v._v("user agent")]),v._v("，一模一样的内容每次请求都得带上，浪费带宽和速度，"),e("code",[v._v("2.0")]),v._v("使用"),e("code",[v._v("gzip")]),v._v("或"),e("code",[v._v("compress")]),v._v("压缩再发出，而客户端和服务端同时维护一张头信息表，所有字段都会存入这张表中，生成一个索引号，以后不发送相同字段 只发索引号，可以提速")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("服务器推送")]),v._v(":"),e("code",[v._v("2.0")]),v._v("允许服务器未经请求主动向客户端发送资源，交服务器推送，提前给客户端推送必要的资源，减少延迟时间，需要注意的是"),e("code",[v._v("2.0")]),v._v("主动推送的是静态资源，跟"),e("code",[v._v("ws")]),v._v("以及使用的"),e("code",[v._v("sse")]),v._v("向客户端发送即时数据的推送是不同的")])])]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("队头堵塞")]),v._v(" "),e("p",[v._v("有"),e("code",[v._v("HTTP")]),v._v("基本的“请求 - 应答”模型导致的，"),e("code",[v._v("http")]),v._v("规定报文必须是一发一收，形成了先进先出的串行队列，队列请求没有优先级，只有入队的顺序，最前面的请求最先被处理，如果队首的请求因为处理的太慢了耽误了时间，那么后面的所有请求也得跟着等待，造成了队头阻塞")])]),v._v(" "),e("h2",{attrs:{id:"tcp长连接和短连接的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp长连接和短连接的区别"}},[v._v("#")]),v._v(" "),e("code",[v._v("TCP")]),v._v("长连接和短连接的区别")]),v._v(" "),e("p",[v._v("长连接:在一个"),e("code",[v._v("TCP")]),v._v("连接上可以连续发送多个数据包，在"),e("code",[v._v("TCP")]),v._v("连接保持期间，如果没有数据包发送，需要双方发检测包以维持此连接，一般需要自己做在线维持。")]),v._v(" "),e("p",[v._v("短连接:指通信双方有数据交互时，就建立一个"),e("code",[v._v("TCP")]),v._v("连接，数据发送完成后，则断开此"),e("code",[v._v("TCP")]),v._v("连接，一般银行都使用短连接。")]),v._v(" "),e("h2",{attrs:{id:"http-中的-keep-alive-有了解吗-它和多路复用的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-中的-keep-alive-有了解吗-它和多路复用的区别"}},[v._v("#")]),v._v(" "),e("code",[v._v("HTTP")]),v._v(" 中的 "),e("code",[v._v("keep-alive")]),v._v(" 有了解吗？它和多路复用的区别"),e("badge",{attrs:{text:"重要",type:"warning"}})],1),v._v(" "),e("p",[e("code",[v._v("HTTP/1.x")]),v._v(" 是基于文本的，只能整体去传；"),e("code",[v._v("HTTP/2")]),v._v(" 是基于二进制流的，可以分解为独立的帧，交错发送")]),v._v(" "),e("p",[e("code",[v._v("HTTP/1.x keep-alive")]),v._v(" 必须按照请求发送的顺序返回响应；"),e("code",[v._v("HTTP/2")]),v._v(" 多路复用不按序响应")]),v._v(" "),e("p",[e("code",[v._v("HTTP/1.x keep-alive")]),v._v(" 为了解决队头阻塞，将同一个页面的资源分散到不同域名下，开启了多个 "),e("code",[v._v("TCP")]),v._v(" 连接；"),e("code",[v._v("HTTP/2")]),v._v(" 同域名下所有通信都在单个连接上完成")]),v._v(" "),e("p",[e("code",[v._v("HTTP/1.x keep-alive")]),v._v(" 单个 "),e("code",[v._v("TCP")]),v._v(" 连接在同一时刻只能处理一个请求（两个请求的生命周期不能重叠）；"),e("code",[v._v("HTTP/2")]),v._v(" 单个 "),e("code",[v._v("TCP")]),v._v(" 同一时刻可以发送多个请求和响应")]),v._v(" "),e("h2",{attrs:{id:"http2的缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http2的缺点"}},[v._v("#")]),v._v(" "),e("code",[v._v("HTTP2")]),v._v("的缺点"),e("badge",{attrs:{text:"重要",type:"warning"}})],1),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("TCP")]),v._v(" 以及 "),e("code",[v._v("TCP+TLS")]),v._v(" 建立连接的延时,"),e("code",[v._v("HTTP/2")]),v._v("使用"),e("code",[v._v("TCP")]),v._v("协议来传输的，而如果使用"),e("code",[v._v("HTTPS")]),v._v("的话，还需要使用"),e("code",[v._v("TLS")]),v._v("协议进行安全传输，而使用"),e("code",[v._v("TLS")]),v._v("也需要一个握手过程,在传输数据之前，导致我们需要花掉 "),e("code",[v._v("3～4")]),v._v(" 个 "),e("code",[v._v("RTT")]),v._v("。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("TCP")]),v._v("的队头阻塞并没有彻底解决。在"),e("code",[v._v("HTTP/2")]),v._v("中，多个请求是跑在一个"),e("code",[v._v("TCP")]),v._v("管道中的。但当"),e("code",[v._v("HTTP/2")]),v._v("出现丢包时，整个 "),e("code",[v._v("TCP")]),v._v(" 都要开始等待重传，那么就会阻塞该"),e("code",[v._v("TCP")]),v._v("连接中的所有请求。")])])]),v._v(" "),e("h2",{attrs:{id:"https与http的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#https与http的区别"}},[v._v("#")]),v._v(" "),e("code",[v._v("https")]),v._v("与"),e("code",[v._v("http")]),v._v("的区别"),e("badge",{attrs:{text:"特别重要",type:"warning"}})],1),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("https")]),v._v("需要"),e("code",[v._v("ca")]),v._v("证书，"),e("code",[v._v("http")]),v._v("不用")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("http")]),v._v("是"),e("strong",[v._v("超文本传输协议")]),v._v("，是明文传输，"),e("code",[v._v("https")]),v._v("是具有安全性的"),e("code",[v._v("ssl")]),v._v("加密传输")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("http")]),v._v("端口是"),e("code",[v._v("80")]),v._v(" "),e("code",[v._v("https")]),v._v("是"),e("code",[v._v("443")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("http")]),v._v("是无状态的协议，"),e("code",[v._v("https")]),v._v("是具有"),e("code",[v._v("ssl")]),v._v("和"),e("code",[v._v("http")]),v._v("协议构建的可加密、身份认证的网络协议，比"),e("code",[v._v("http")]),v._v("安全")])])]),v._v(" "),e("h2",{attrs:{id:"get方法对url长度限制的原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get方法对url长度限制的原因"}},[v._v("#")]),v._v(" "),e("code",[v._v("GET")]),v._v("方法对"),e("code",[v._v("URL")]),v._v("长度限制的原因")]),v._v(" "),e("p",[e("code",[v._v("http")]),v._v("不对"),e("code",[v._v("get")]),v._v("方法长度进行限制，其实这个限制是浏览器和服务器对"),e("code",[v._v("url")]),v._v("的限制，"),e("code",[v._v("ie")]),v._v("对"),e("code",[v._v("url")]),v._v("长度限制是"),e("code",[v._v("2083")]),v._v("字节"),e("code",[v._v("(2k+35)")]),v._v("，"),e("code",[v._v("ie")]),v._v("限制地最小，所以只要不超过"),e("code",[v._v("2083")]),v._v("就不会有问题")]),v._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token constant"}},[v._v("GET")]),v._v("的长度值 "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[v._v("URL")]),v._v("（"),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("2083")]),v._v("）"),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("-")]),v._v(" （你的Domain"),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("+")]),v._v("Path）"),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("2")]),v._v("（"),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("2")]),v._v("是"),e("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("get")]),v._v("请求中"),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v("两个字符的长度）\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("h2",{attrs:{id:"对keep-alive的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对keep-alive的理解"}},[v._v("#")]),v._v(" 对"),e("code",[v._v("keep-alive")]),v._v("的理解")]),v._v(" "),e("p",[e("code",[v._v("http1.0")]),v._v("默认每次请求/应答，客户端和服务端都会新建一个连接，完成之后断开连接，这是短连接")]),v._v(" "),e("p",[v._v("使用"),e("code",[v._v("keep-alive")]),v._v("使客户端到服务端的连接持续有效，当出现对服务器的后续请求时，可以避免建立或重新连接，这是长连接")]),v._v(" "),e("p",[v._v("使用方法：")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("1.0")]),v._v("默认没有"),e("code",[v._v("keep-alive")]),v._v("，需要的话配置发送"),e("code",[v._v("Connection: keep-alive")])])]),v._v(" "),e("li",[e("p",[v._v("断开的话发送"),e("code",[v._v("Connection: close")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("1.1")]),v._v("版本默认保持长连接，数据传输完成的时候"),e("code",[v._v("tcp")]),v._v("连接不断开，等待同域名下继续使用这个通道传输数据，需要关闭就发送"),e("code",[v._v("Connection: close")])])])]),v._v(" "),e("p",[e("code",[v._v("Keep-Alive")]),v._v("的"),e("strong",[v._v("建立过程")]),v._v("：")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("客户端向服务器在发送请求报文同时在首部添加发送"),e("code",[v._v("Connection")]),v._v("字段")])]),v._v(" "),e("li",[e("p",[v._v("服务器收到请求并处理 "),e("code",[v._v("Connection")]),v._v("字段")])]),v._v(" "),e("li",[e("p",[v._v("服务器回送"),e("code",[v._v("Connection:Keep-Alive")]),v._v("字段给客户端")])]),v._v(" "),e("li",[e("p",[v._v("客户端接收到"),e("code",[v._v("Connection")]),v._v("字段")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("Keep-Alive")]),v._v("连接建立成功")])])]),v._v(" "),e("p",[e("strong",[v._v("服务端自动断开过程（也就是没有"),e("code",[v._v("keep-alive")]),v._v("）")]),v._v("：")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("客户端向服务器只是发送内容报文（不包含"),e("code",[v._v("Connection")]),v._v("字段）")])]),v._v(" "),e("li",[e("p",[v._v("服务器收到请求并处理")])]),v._v(" "),e("li",[e("p",[v._v("服务器返回客户端请求的资源并关闭连接")])]),v._v(" "),e("li",[e("p",[v._v("客户端接收资源，发现没有"),e("code",[v._v("Connection")]),v._v("字段，断开连接")])])]),v._v(" "),e("p",[e("strong",[v._v("客户端请求断开连接过程")]),v._v("：")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("客户端向服务器发送"),e("code",[v._v("Connection:close")]),v._v("字段")])]),v._v(" "),e("li",[e("p",[v._v("服务器收到请求并处理"),e("code",[v._v("connection")]),v._v("字段")])]),v._v(" "),e("li",[e("p",[v._v("服务器回送响应资源并断开连接")])]),v._v(" "),e("li",[e("p",[v._v("客户端接收资源并断开连接")])])]),v._v(" "),e("p",[v._v("开启"),e("code",[v._v("Keep-Alive")]),v._v("的"),e("strong",[v._v("优点：")])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("较少的"),e("code",[v._v("CPU")]),v._v("和内存的使⽤（由于同时打开的连接的减少了）；")])]),v._v(" "),e("li",[e("p",[v._v("允许请求和应答的"),e("code",[v._v("HTTP")]),v._v("管线化；")])]),v._v(" "),e("li",[e("p",[v._v("降低拥塞控制 （"),e("code",[v._v("TCP")]),v._v("连接减少了）；")])]),v._v(" "),e("li",[e("p",[v._v("减少了后续请求的延迟（⽆需再进⾏握⼿）；")])]),v._v(" "),e("li",[e("p",[v._v("报告错误⽆需关闭"),e("code",[v._v("TCP")]),v._v("连接")])])]),v._v(" "),e("p",[v._v("开启"),e("code",[v._v("Keep-Alive")]),v._v("的"),e("strong",[v._v("缺点")]),v._v("：")]),v._v(" "),e("ul",[e("li",[v._v("长时间的"),e("code",[v._v("TCP")]),v._v("连接容易导致系统资源无效占用，浪费系统资源。")])]),v._v(" "),e("h2",{attrs:{id:"页面有多张图片-http怎么加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#页面有多张图片-http怎么加载"}},[v._v("#")]),v._v(" 页面有多张图片，"),e("code",[v._v("http")]),v._v("怎么加载")]),v._v(" "),e("p",[v._v("在"),e("code",[v._v("http1")]),v._v("，浏览器对一个域名下最大"),e("code",[v._v("tcp")]),v._v("连接数为"),e("code",[v._v("6")]),v._v("，所以会请求多次，可以用多域名部署解决，可以提高同时请求的数目，加快页面图片的获取速度")]),v._v(" "),e("p",[v._v("在"),e("code",[v._v("http2")]),v._v("中，支持多路复用，可以在一个"),e("code",[v._v("tcp")]),v._v("连接中发送多个"),e("code",[v._v("http")]),v._v("请求")]),v._v(" "),e("h2",{attrs:{id:"如何理解-http-代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何理解-http-代理"}},[v._v("#")]),v._v(" 如何理解 "),e("code",[v._v("HTTP")]),v._v(" 代理？")]),v._v(" "),e("p",[v._v("我们知道在 "),e("code",[v._v("HTTP")]),v._v(" 是基于"),e("code",[v._v("请求-响应")]),v._v("模型的协议，一般由客户端发请求，服务器来进行响应。")]),v._v(" "),e("p",[v._v("当然，也有特殊情况，就是代理服务器的情况。引入代理之后，作为代理的服务器相当于一个中间人的角色，对于客户端而言，表现为服务器进行响应；而对于源服务器，表现为客户端发起请求，具有"),e("strong",[v._v("双重身份")]),v._v("。")]),v._v(" "),e("p",[v._v("那代理服务器到底是用来做什么的呢？")]),v._v(" "),e("p",[e("strong",[v._v("功能")])]),v._v(" "),e("ol",[e("li",[e("strong",[v._v("负载均衡")]),v._v("。客户端的请求只会先到达代理服务器，后面到底有多少源服务器，"),e("code",[v._v("IP")]),v._v(" 都是多少，客户端是不知道的。因此，这个代理服务器可以拿到这个请求之后，可以通过特定的算法分发给不同的源服务器，让各台源服务器的负载尽量平均。当然，这样的算法有很多，包括"),e("strong",[v._v("随机算法")]),v._v("、"),e("strong",[v._v("轮询")]),v._v("、"),e("strong",[v._v("一致性"),e("code",[v._v("hash")])]),v._v("、"),e("strong",[e("code",[v._v("LRU")])]),e("code",[v._v("(最近最少使用)")]),v._v("等等，不过这些算法并不是本文的重点，大家有兴趣自己可以研究一下。")]),v._v(" "),e("li",[e("strong",[v._v("保障安全")]),v._v("。利用"),e("strong",[v._v("心跳")]),v._v("机制监控后台的服务器，一旦发现故障机就将其踢出集群。并且对于上下行的数据进行过滤，对非法 "),e("code",[v._v("IP")]),v._v(" 限流，这些都是代理服务器的工作。")]),v._v(" "),e("li",[e("strong",[v._v("缓存代理")]),v._v("。将内容缓存到代理服务器，使得客户端可以直接从代理服务器获得而不用到源服务器那里。")])]),v._v(" "),e("h2",{attrs:{id:"http2头部压缩算法如何实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http2头部压缩算法如何实现"}},[v._v("#")]),v._v(" "),e("code",[v._v("http2")]),v._v("头部压缩算法如何实现"),e("badge",{attrs:{text:"重要",type:"warning"}})],1),v._v(" "),e("p",[e("code",[v._v("http2")]),v._v("头部压缩是"),e("code",[v._v("HPACK")]),v._v("算法，在客户端和服务端两端建立“字典”，用索引号表示重复的字符串，采用"),e("strong",[v._v("哈夫曼编码压缩整数和字符串")])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("在客户端和服务器端使用“首部表”来跟踪和存储之前发送的键值对，对于相同的数据，不再通过每次请求和响应发送；")])]),v._v(" "),e("li",[e("p",[v._v("首部表在"),e("code",[v._v("HTTP/2")]),v._v("的连接存续期内始终存在，由客户端和服务器共同渐进地更新；")])]),v._v(" "),e("li",[e("p",[v._v("每个新的首部键值对要么被追加到当前表的末尾，要么替换表中之前的值。")])])]),v._v(" "),e("p",[v._v("例如下图中的两个请求， 请求一发送了所有的头部字段，第二个请求则只需要发送差异数据，这样可以减少冗余数据，降低开销。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202112041547556.webp",alt:"img"}})]),v._v(" "),e("h2",{attrs:{id:"其他相关头部字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他相关头部字段"}},[v._v("#")]),v._v(" 其他相关头部字段"),e("badge",{attrs:{text:"了解"}})],1),v._v(" "),e("p",[e("strong",[e("code",[v._v("Via")])])]),v._v(" "),e("p",[v._v("代理服务器需要标明自己的身份，在 "),e("code",[v._v("HTTP")]),v._v(" 传输中留下自己的痕迹，怎么办呢？")]),v._v(" "),e("p",[v._v("通过"),e("code",[v._v("Via")]),v._v("字段来记录。举个例子，现在中间有两台代理服务器，在客户端发送请求后会经历这样一个过程:")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("客户端 -> 代理1 -> 代理2 -> 源服务器\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("在源服务器收到请求后，会在"),e("code",[v._v("请求头")]),v._v("拿到这个字段:")]),v._v(" "),e("div",{staticClass:"language-http line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Via:")]),v._v(" proxy_server1, proxy_server2\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("而源服务器响应时，最终在客户端会拿到这样的"),e("code",[v._v("响应头")]),v._v(":")]),v._v(" "),e("div",{staticClass:"language-http line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Via:")]),v._v(" proxy_server2, proxy_server1\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("可以看到，"),e("code",[v._v("Via")]),v._v("中代理的顺序即为在 "),e("code",[v._v("HTTP")]),v._v(" 传输中报文传达的顺序。")]),v._v(" "),e("p",[e("strong",[e("code",[v._v("X-Forwarded-For")])])]),v._v(" "),e("p",[v._v("字面意思就是"),e("code",[v._v("为谁转发")]),v._v(", 它记录的是"),e("strong",[v._v("请求方")]),v._v("的"),e("code",[v._v("IP")]),v._v("地址(注意，和"),e("code",[v._v("Via")]),v._v("区分开，"),e("code",[v._v("X-Forwarded-For")]),v._v("记录的是请求方这一个"),e("code",[v._v("IP")]),v._v(")。")]),v._v(" "),e("p",[e("strong",[e("code",[v._v("X-Real-IP")])])]),v._v(" "),e("p",[v._v("是一种获取用户真实 "),e("code",[v._v("IP")]),v._v(" 的字段，不管中间经过多少代理，这个字段始终记录最初的客户端的"),e("code",[v._v("IP")]),v._v("。")]),v._v(" "),e("p",[v._v("相应的，还有"),e("code",[v._v("X-Forwarded-Host")]),v._v("和"),e("code",[v._v("X-Forwarded-Proto")]),v._v("，分别记录"),e("strong",[v._v("客户端")]),v._v("(注意哦，不包括代理)的"),e("code",[v._v("域名")]),v._v("和"),e("code",[v._v("协议名")]),v._v("。")]),v._v(" "),e("p",[e("strong",[e("code",[v._v("X-Forwarded-For")]),v._v("产生的问题")])]),v._v(" "),e("p",[v._v("前面可以看到，"),e("code",[v._v("X-Forwarded-For")]),v._v("这个字段记录的是请求方的 "),e("code",[v._v("IP")]),v._v("，这意味着每经过一个不同的代理，这个字段的名字都要变，从"),e("code",[v._v("客户端")]),v._v("到"),e("code",[v._v("代理1")]),v._v("，这个字段是客户端的"),e("code",[v._v("IP")]),v._v("，从"),e("code",[v._v("代理1")]),v._v("到"),e("code",[v._v("代理2")]),v._v("，这个字段就变为了"),e("code",[v._v("代理1")]),v._v("的 "),e("code",[v._v("IP")]),v._v("。")]),v._v(" "),e("p",[v._v("但是这会产生两个问题:")]),v._v(" "),e("ol",[e("li",[v._v("意味着代理必须解析 "),e("code",[v._v("HTTP")]),v._v(" 请求头，然后修改，比直接转发数据性能下降。")]),v._v(" "),e("li",[v._v("在 "),e("code",[v._v("HTTPS")]),v._v(" 通信加密的过程中，原始报文是不允许修改的。")])]),v._v(" "),e("p",[v._v("由此产生了"),e("code",[v._v("代理协议")]),v._v("，一般使用明文版本，只需要在 "),e("code",[v._v("HTTP")]),v._v(" 请求行上面加上这样格式的文本即可:")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("// PROXY + TCP4/TCP6 + 请求方地址 + 接收方地址 + 请求端口 + 接收端口\nPROXY TCP4 0.0.0.1 0.0.0.2 1111 2222\nGET / HTTP/1.1\n...\n复制代码\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br"),e("span",{staticClass:"line-number"},[v._v("4")]),e("br"),e("span",{staticClass:"line-number"},[v._v("5")]),e("br")])]),e("p",[v._v("这样就可以解决"),e("code",[v._v("X-Forwarded-For")]),v._v("带来的问题了")]),v._v(" "),e("h2",{attrs:{id:"http的请求报文是什么样的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http的请求报文是什么样的"}},[v._v("#")]),v._v(" "),e("code",[v._v("HTTP")]),v._v("的请求报文是什么样的")]),v._v(" "),e("p",[v._v("由请求行 请求头部 空行 请求体组成")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202112041548272.webp",alt:"img"}})]),v._v(" "),e("p",[v._v("请求⾏包括：请求⽅法字段、"),e("code",[v._v("URL")]),v._v("字段、"),e("code",[v._v("HTTP")]),v._v("协议版本字段")]),v._v(" "),e("p",[v._v("请求头部:请求头部由关键字/值对组成，每⾏⼀对，关键字和值⽤英⽂冒号"),e("code",[v._v("“:”")]),v._v("分隔")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("User-Agent")]),v._v("：产⽣请求的浏览器类型。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("Accept")]),v._v("：客户端可识别的内容类型列表。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("Host")]),v._v("：请求的主机名，允许多个域名同处⼀个"),e("code",[v._v("IP")]),v._v("地址，即虚拟主机。")])])]),v._v(" "),e("p",[v._v("请求体:"),e("code",[v._v("post")]),v._v(" "),e("code",[v._v("put")]),v._v("等请求携带的数据")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic@main/img/edsfndsjfbwaternark.1uyexsgxywn4.webp",alt:"img"}})]),v._v(" "),e("h2",{attrs:{id:"http响应报文是什么样的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http响应报文是什么样的"}},[v._v("#")]),v._v(" "),e("code",[v._v("HTTP")]),v._v("响应报文是什么样的")]),v._v(" "),e("p",[v._v("由响应行 响应头 空行 响应体")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202112122147127.webp",alt:"img"}})]),v._v(" "),e("h2",{attrs:{id:"http的优缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http的优缺点"}},[v._v("#")]),v._v(" "),e("code",[v._v("http")]),v._v("的优缺点"),e("badge",{attrs:{text:"重要",type:"warning"}})],1),v._v(" "),e("p",[e("code",[v._v("http")]),v._v("是超文本传输协议，定义了客户端和服务端交换报文的格式和方式，默认使用"),e("code",[v._v("80")]),v._v("端口，使用"),e("code",[v._v("tcp")]),v._v("协议作为"),e("strong",[v._v("传输层")]),v._v("协议，保证了数据传输的可靠")]),v._v(" "),e("p",[e("mark",[v._v("优点")]),v._v("：")]),v._v(" "),e("ul",[e("li",[e("p",[e("strong",[v._v("支持客户端/服务端")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("简单快捷")]),v._v(" 客户向服务器请求时 只需传送请求方法和路径 由于"),e("code",[v._v("http")]),v._v("协议简单 使得"),e("code",[v._v("http")]),v._v("服务器规模小，通信速度快")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("无连接")]),v._v(" 限制每次连接只处理一个请求，服务端处理完客户请求，客户收到应答就断开连接，可以节省传输时间")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("无状态")]),v._v(" 状态指的是通信上下文信息，缺少状态意味着如果后续处理需要前面的信息，就必须重传，导致每次连接传送的数据量增大，另一方面在服务器不需要之前的信息他的应答就比较快")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("灵活")]),v._v(" "),e("code",[v._v("http")]),v._v("允许传输任意类型的数据对象，由"),e("code",[v._v("content-type")]),v._v("标记")])])]),v._v(" "),e("p",[e("mark",[v._v("缺点:")])]),v._v(" "),e("ul",[e("li",[e("p",[e("strong",[v._v("无状态")]),v._v(" 服务器不会保存关于客户的任何消息")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("明文传输")]),v._v(" 报文采用文本形式 不安全")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("不安全")]),v._v(" 使用明文 内容易被窃听；不验证通信方身份，可能伪装；无法验证报文完整性，可能被篡改")])])]),v._v(" "),e("h2",{attrs:{id:"rtt-往返时间是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rtt-往返时间是什么"}},[v._v("#")]),v._v(" "),e("code",[v._v("RTT")]),v._v(" 往返时间是什么")]),v._v(" "),e("p",[e("code",[v._v("RTT（Round-Trip Time）")]),v._v("，往返时间，表示从发送端发送数据开始，到发送端收到来自接收端的确认（接收端收到数据后便立即发送确认，不包含数据传输时间）总共经历的时间，即通信一来一回的时间")]),v._v(" "),e("h2",{attrs:{id:"http通信时间总和是多少"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http通信时间总和是多少"}},[v._v("#")]),v._v(" "),e("code",[v._v("http")]),v._v("通信时间总和是多少")]),v._v(" "),e("p",[v._v("上一题我们知道了"),e("code",[v._v("RTT")]),v._v("的概念，那么"),e("code",[v._v("TCP")]),v._v("的三次握手🤝理论上来说花的时间应该是"),e("code",[v._v("1.5RTT")]),v._v("，但是客户端第三次握手的时候不需要服务器的响应，所以节省了"),e("code",[v._v("0.5RTT")]),v._v("，所以"),e("code",[v._v("TCP")]),v._v("连接的时间为"),e("code",[v._v("1RTT")])]),v._v(" "),e("p",[e("code",[v._v("HTTP")]),v._v("的交易时间为")]),v._v(" "),e("ul",[e("li",[v._v("一去（"),e("code",[v._v("HTTP Request")]),v._v("）")]),v._v(" "),e("li",[v._v("二回 （"),e("code",[v._v("HTTP Responses")]),v._v("）")])]),v._v(" "),e("p",[v._v("故 "),e("code",[v._v("HTTP")]),v._v(" 交易时间 = "),e("code",[v._v("1 RTT")])]),v._v(" "),e("p",[e("strong",[e("code",[v._v("HTTP")]),v._v(" 通信时间总和")]),v._v(" "),e("strong",[v._v("= "),e("code",[v._v("TCP")]),v._v(" 建立连接时间 + "),e("code",[v._v("HTTP")]),v._v(" 交易时间 = "),e("code",[v._v("1 RTT")]),v._v("+ "),e("code",[v._v("1 RTT")]),v._v(" = "),e("code",[v._v("2 RTT")])])]),v._v(" "),e("h2",{attrs:{id:"https通信时间总和是多少"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#https通信时间总和是多少"}},[v._v("#")]),v._v(" "),e("code",[v._v("HTTPS")]),v._v("通信时间总和是多少")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202202111527604.png",alt:""}})]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("一去：")]),v._v(" 客户端发送一个随机数 "),e("code",[v._v("C")]),v._v("，客户端的 "),e("code",[v._v("TLS")]),v._v(" 版本号以及支持的密码套件列表给服务器端")]),v._v(" "),e("li",[e("strong",[v._v("二回：")]),v._v(" 服务端收到客户端的随机值，自己也产生一个随机值 "),e("code",[v._v("S")]),v._v(" ，并根据客户端需求的协议和加密方式来使用对应的方式，并且发送自己的证书（如果需要验证客户端证书需要说明）")]),v._v(" "),e("li",[e("strong",[v._v("三去：")]),v._v(" 客户端收到服务端的证书并验证是否有效，验证通过会再生成一个随机值 "),e("code",[v._v("pre-master")]),v._v("，通过服务端证书的公钥去加密这个随机值并发送给服务端。如果服务端需要验证客户端证书的话会附带证书（双向认证，比如网上银行用 "),e("code",[v._v("U")]),v._v(" 盾）")]),v._v(" "),e("li",[e("strong",[v._v("四回：")]),v._v("  服务端收到加密过的随机值并使用私钥解密获得第三个随机值，这时候两端都拥有了三个随机值，可以通过这三个随机值（"),e("code",[v._v("C/S")]),v._v(" 加 "),e("code",[v._v("pre-master")]),v._v(" 算出主密钥）按照之前约定的加密方式生成密钥，接下来的通信就可以通过该会话密钥来加密解密")])]),v._v(" "),e("p",[e("code",[v._v("HTTPS")]),v._v(" 基于"),e("code",[v._v("TLS1.2")]),v._v("通信时间总和 = "),e("code",[v._v("TCP")]),v._v(" 建立连接时间 + "),e("code",[v._v("TLS")]),v._v(" 连接时间 + "),e("code",[v._v("HTTP")]),v._v("交易时间 = "),e("code",[v._v("1 RTT")]),v._v(" + "),e("code",[v._v("2 RTT")]),v._v(" + "),e("code",[v._v("1 RTT")]),v._v(" = "),e("code",[v._v("4 RTT")])]),v._v(" "),e("p",[e("strong",[e("code",[v._v("HTTPS")]),v._v(" 通信时间总和（基于"),e("code",[v._v("TLS1.3")]),v._v("） = "),e("code",[v._v("TCP")]),v._v(" 建立连接时间 + "),e("code",[v._v("TLS1.3")]),v._v(" 连接时间 + "),e("code",[v._v("HTTP")]),v._v("交易时间 = "),e("code",[v._v("1 RTT")]),v._v(" + "),e("code",[v._v("1 RTT")]),v._v(" + "),e("code",[v._v("1 RTT")]),v._v(" = "),e("code",[v._v("3 RTT")])])]),v._v(" "),e("h2",{attrs:{id:"http性能怎么样"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http性能怎么样"}},[v._v("#")]),v._v(" "),e("code",[v._v("http")]),v._v("性能怎么样")]),v._v(" "),e("p",[v._v("基于"),e("code",[v._v("tcp/ip")]),v._v("，使用"),e("strong",[v._v("请求")]),v._v("和"),e("strong",[v._v("应答")]),v._v("通信模式，所以性能来说这俩是关键")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("长连接 可以避免每次"),e("code",[v._v("tcp")]),v._v("连接三次握手花费")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("http1.1")]),v._v(" 管道网络传输，就是一个"),e("code",[v._v("tcp")]),v._v("连接里面客户端可以发送多个请求")])]),v._v(" "),e("li",[e("p",[v._v("队头拥塞 "),e("code",[v._v("http")]),v._v("传输是一发一收 ，里面的任务放在一个任务队列中串行执行 一旦队首请求的太慢会阻塞后面请求的处理")]),v._v(" "),e("p",[v._v("解决方法：")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("并发连接")]),v._v(" 对于一个域名允许分配多个长连接，相当于增加了任务队列")]),v._v(" "),e("li",[e("strong",[v._v("域名分片")]),v._v(" 将域名分出很多个二级域名，全都指向同样的一台服务器 能够并发的长连接数变多")])])])]),v._v(" "),e("h2",{attrs:{id:"为什么http3不使用tcp而是使用udp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么http3不使用tcp而是使用udp"}},[v._v("#")]),v._v(" 为什么"),e("code",[v._v("HTTP3")]),v._v("不使用"),e("code",[v._v("TCP")]),v._v("而是使用"),e("code",[v._v("UDP")])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202202111540417.png",alt:""}})]),v._v(" "),e("h2",{attrs:{id:"说一下http3-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说一下http3-0"}},[v._v("#")]),v._v(" 说一下"),e("code",[v._v("http3.0")])]),v._v(" "),e("p",[v._v("基于"),e("code",[v._v("UDP")]),v._v("协议实现的类似于"),e("code",[v._v("tcp")]),v._v("多路复用的数据流，传输可靠性，称为"),e("code",[v._v("QUIC")]),v._v("协议")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202112041614890.webp",alt:"img"}})]),v._v(" "),e("ol",[e("li",[e("p",[e("strong",[v._v("流量控制、传输可靠性")]),v._v("："),e("code",[v._v("QUIC")]),v._v("在"),e("code",[v._v("udp")]),v._v("基础上增加一层保证数据传输可靠性，提供了数据包重传 拥塞控制等")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("集成TLS加密功能")]),v._v("，减少花费的"),e("code",[v._v("RTT")]),v._v("数")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("多路复用")]),v._v(" 同一个物理连接上可以有多个独立的逻辑数据流，实现数据流单独传输，解决"),e("code",[v._v("tcp")]),v._v("队头阻塞问题")])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("快速握手")]),v._v(" 基于"),e("code",[v._v("udp")]),v._v("，可以实现"),e("code",[v._v("0-1")]),v._v("个"),e("code",[v._v("rtt")]),v._v("来建立连接")])])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202112041614234.webp",alt:"img"}})]),v._v(" "),e("h2",{attrs:{id:"http3怎么解决队头拥塞问题、0rtt有了解过吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http3怎么解决队头拥塞问题、0rtt有了解过吗"}},[v._v("#")]),v._v(" "),e("code",[v._v("HTTP3")]),v._v("怎么解决队头拥塞问题、"),e("code",[v._v("0RTT")]),v._v("有了解过吗")]),v._v(" "),e("p",[e("code",[v._v("QUIC")]),v._v(" 协议是基于 "),e("code",[v._v("UDP")]),v._v(" 协议实现的，在传输层层面并没有固定的连接，可以根据需要开辟任意逻辑链路, "),e("code",[v._v("QUIC")]),v._v("一次建立一个"),e("code",[v._v("Connection")]),v._v("，一个"),e("code",[v._v("Connection")]),v._v("下包含多个"),e("code",[v._v("Stream")]),v._v("流(每个"),e("code",[v._v("stream")]),v._v("独自维护一个逻辑连接，因为"),e("code",[v._v("UDP")]),v._v("层面上是无连接的),每个流对应一个文件传输，并将不同的"),e("code",[v._v("Stream")]),v._v("中的数据交付给不同的上层应用。"),e("code",[v._v("QUIC")]),v._v("的一个"),e("code",[v._v("Connection")]),v._v("对应多个"),e("code",[v._v("Stream")]),v._v("，"),e("code",[v._v("Stream")]),v._v("之间相互独立，因此任意一条链路断开都不会导致其他数据阻塞。")]),v._v(" "),e("p",[v._v("例如下图，"),e("code",[v._v("stream2")]),v._v(" 丢了一个 "),e("code",[v._v("UDP")]),v._v(" 包，不会影响后面跟着 "),e("code",[v._v("Stream3")]),v._v(" 和 "),e("code",[v._v("Stream4")]),v._v("。这样的技术就解决了之前 "),e("code",[v._v("TCP")]),v._v(" 存在的队头阻塞问题。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202202111541825",alt:"图片"}})]),v._v(" "),e("p",[v._v("并且 "),e("code",[v._v("QUIC")]),v._v(" 在移动端的表现也会比 "),e("code",[v._v("TCP")]),v._v(" 好。因为 "),e("code",[v._v("TCP")]),v._v(" 是基于 "),e("code",[v._v("IP")]),v._v(" 和端口去识别连接的，这种方式在多变的移动端网络环境下是很脆弱的。")]),v._v(" "),e("p",[v._v("但是 "),e("code",[v._v("QUIC")]),v._v(" 是通过 "),e("code",[v._v("ID")]),v._v(" 的方式去识别一个连接，不管你网络环境如何变化，只要 "),e("code",[v._v("ID")]),v._v(" 不变，就能迅速重连上。")]),v._v(" "),e("p",[e("strong",[e("code",[v._v("0RTT")])])]),v._v(" "),e("p",[v._v("通过使用类似 "),e("code",[v._v("TCP")]),v._v(" 快速打开的技术，缓存当前会话的上下文，在下次恢复会话的时候，只需要将之前的缓存传递给服务端验证通过就可以进行传输了。")]),v._v(" "),e("p",[e("strong",[e("code",[v._v("0RTT")]),v._v(" 建连可以说是 "),e("code",[v._v("QUIC")]),v._v(" 相比 "),e("code",[v._v("HTTP2")]),v._v(" 最大的性能优势")]),v._v("。那什么是 "),e("code",[v._v("0RTT")]),v._v(" 建连呢？")]),v._v(" "),e("p",[v._v("这里面有两层含义:")]),v._v(" "),e("ul",[e("li",[v._v("传输层 "),e("code",[v._v("0RTT")]),v._v(" 就能建立连接。")]),v._v(" "),e("li",[v._v("加密层 "),e("code",[v._v("0RTT")]),v._v(" 就能建立加密连接。")])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202202111545863.gif",alt:"图片"}})]),v._v(" "),e("p",[v._v("上图左边是 "),e("code",[v._v("HTTPS")]),v._v(" 的一次完全握手的建连过程，需要 "),e("code",[v._v("2-3")]),v._v(" 个 "),e("code",[v._v("RTT")]),v._v("才开始传输数据，右边 "),e("code",[v._v("QUIC")]),v._v(" 协议在第一个包就可以包含有效的应用数据")]),v._v(" "),e("p",[v._v("当然，"),e("code",[v._v("QUIC")]),v._v(" 协议可以实现 "),e("code",[v._v("0RTT")]),v._v(" ，但这也是有条件的，实际上是首次连接 "),e("code",[v._v("1RTT")]),v._v("，非首次连接 "),e("code",[v._v("0RTT")]),v._v("，首次连接过程：")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202202111545543",alt:"图片"}})]),v._v(" "),e("p",[v._v("可以看到，首次连接的时候，在第 "),e("code",[v._v("4")]),v._v(" 步时，就已经开始发送实际的业务数据了，而第 "),e("code",[v._v("1 - 3")]),v._v(" 步正好一去一回花费了 "),e("code",[v._v("1RTT")]),v._v(" 时间，所以，首次连接的成本是 "),e("code",[v._v("1RTT")])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202202111547664",alt:"图片"}})]),v._v(" "),e("p",[v._v("非首次连接：")]),v._v(" "),e("ul",[e("li",[v._v("前面提到客户端和服务端首次连接时服务端传递了"),e("code",[v._v("config")]),v._v("包，里面包含了服务端公钥和两个随机数，客户端会将"),e("code",[v._v("config")]),v._v("存储下来，后续再连接时可以直接使用，从而跳过这个"),e("code",[v._v("1RTT")]),v._v("，实现"),e("code",[v._v("0RTT")]),v._v("的业务数据交互。")]),v._v(" "),e("li",[v._v("客户端保存"),e("code",[v._v("config")]),v._v("是有时间期限的，在"),e("code",[v._v("config")]),v._v("失效之后仍然需要进行首次连接时的密钥交换。")])]),v._v(" "),e("h2",{attrs:{id:"这么厉害-那你还知道http3的向前纠错机制吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#这么厉害-那你还知道http3的向前纠错机制吗"}},[v._v("#")]),v._v(" 这么厉害，那你还知道"),e("code",[v._v("HTTP3")]),v._v("的向前纠错机制吗")]),v._v(" "),e("p",[e("code",[v._v("QUIC")]),v._v(" 协议有一个非常独特的特性，称为向前纠错 ("),e("code",[v._v("Forward Error Correction")]),v._v("，"),e("code",[v._v("FEC")]),v._v(")，每个数据包除了它本身的内容之外，还包括了部分其他数据包的数据，因此少量的丢包"),e("strong",[v._v("可以通过其他包的冗余数据直接组装")]),v._v("而无需重传。")]),v._v(" "),e("p",[v._v("向前纠错"),e("strong",[v._v("牺牲了每个数据包可以发送数据的上限")]),v._v("，但是"),e("strong",[v._v("减少了因为丢包导致的数据重传")]),v._v("，因为数据重传将会消耗更多的时间（包括确认数据包丢失、请求重传、等待新数据包等步骤的时间消耗）。")]),v._v(" "),e("p",[v._v("假如说这次我要发送三个包，那么协议会算出这三个包的异或值并单独发出一个校验包，也就是总共发出了四个包。")]),v._v(" "),e("p",[v._v("当出现其中的非校验包丢包的情况时，可以通过另外三个包计算出丢失的数据包的内容。")]),v._v(" "),e("p",[v._v("当然这种技术只能使用在丢失一个包的情况下，如果出现丢失多个包就不能使用纠错机制了，只能使用重传的方式了。")]),v._v(" "),e("h2",{attrs:{id:"那你还知道加密认证的报文吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#那你还知道加密认证的报文吗"}},[v._v("#")]),v._v(" 那你还知道加密认证的报文吗")]),v._v(" "),e("p",[e("code",[v._v("TCP")]),v._v(" 协议头部没有经过任何加密和认证，所以在传输过程中很容易被中间网络设备篡改，注入和窃听。比如修改序列号、滑动窗口。这些行为有可能是出于性能优化，也有可能是主动攻击。")]),v._v(" "),e("p",[v._v("但是 "),e("code",[v._v("QUIC")]),v._v(" 的 "),e("code",[v._v("packet")]),v._v(" 可以说是武装到了牙齿。除了个别报文比如 "),e("code",[v._v("PUBLIC_RESET")]),v._v(" 和 "),e("code",[v._v("CHLO")]),v._v("，所有报文头部都是经过认证的，报文 "),e("code",[v._v("Body")]),v._v(" 都是经过加密的。")]),v._v(" "),e("p",[v._v("这样只要对 "),e("code",[v._v("QUIC")]),v._v(" 报文任何修改，接收端都能够及时发现，有效地降低了安全风险。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202202111552256",alt:"图片"}})]),v._v(" "),e("p",[v._v("如上图所示，红色部分是 "),e("code",[v._v("Stream Frame")]),v._v(" 的报文头部，有认证。绿色部分是报文内容，全部经过加密")]),v._v(" "),e("h2",{attrs:{id:"quic是如何进行包确认和重传的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#quic是如何进行包确认和重传的"}},[v._v("#")]),v._v(" "),e("code",[v._v("QUIC")]),v._v("是如何进行包确认和重传的")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("QUIC")]),v._v(" 的"),e("code",[v._v("Stream")]),v._v("流基于"),e("code",[v._v("Stream ID+Offset")]),v._v("进行包确认，流量控制需要保证所发送的所有包"),e("code",[v._v("offset")]),v._v("小于"),e("strong",[v._v("最大绝对字节偏移量")]),v._v("（"),e("strong",[e("code",[v._v("maximum absolute byte offset")])]),v._v("）, 该值是基于当前已经"),e("strong",[v._v("提交的字节偏移量")]),v._v("（"),e("code",[v._v("offset of data consumed")]),v._v("） 而进行确定的，"),e("code",[v._v("QUIC")]),v._v("会把连续的已确认的"),e("code",[v._v("offset")]),v._v("数据向上层应用提交。"),e("code",[v._v("QUIC")]),v._v("支持乱序确认，但本身也是按序（"),e("code",[v._v("offset")]),v._v("顺序）发送数据包。")]),v._v(" "),e("li",[e("code",[v._v("QUIC")]),v._v("利用"),e("code",[v._v("ack frame")]),v._v("来进行数据包的确认，来保证可靠传输。一个"),e("code",[v._v("ack frame")]),v._v("只"),e("strong",[v._v("包含多个确认信息")]),v._v("，没有正文。")]),v._v(" "),e("li",[v._v("如果数据包"),e("code",[v._v("N")]),v._v("超时，发送端将超时数据包"),e("code",[v._v("N")]),v._v("重新设置编号"),e("code",[v._v("M")]),v._v("（即下一个顺序的数据包编号） 后发送给接收端。")]),v._v(" "),e("li",[v._v("在一个数据包发生超时后，其余的已经发送的数据包依旧可以基于"),e("code",[v._v("Offset")]),v._v("得到确认，避免了"),e("code",[v._v("TCP")]),v._v("利用"),e("code",[v._v("SACK")]),v._v("才能解决的重传问题。")])]),v._v(" "),e("blockquote",[e("p",[v._v("其实"),e("code",[v._v("QUIC")]),v._v("的乱序确认设计思想并不新鲜，大量网络视频流就是通过类似的基于"),e("code",[v._v("UDP")]),v._v("的"),e("code",[v._v("RUDP")]),v._v("、"),e("code",[v._v("RTP")]),v._v("、"),e("code",[v._v("UDT")]),v._v("等协议来实现快速可靠传输的。他们同样支持乱序确认，所以就会导致这样的观看体验：明明进度条显示还有一段缓存，但是画面就是卡着不动了，如果跳过的话视频又能够播放了。")])]),v._v(" "),e("ol",[e("li",[v._v("如图所示，当前缓冲区大小为"),e("code",[v._v("8")]),v._v("，"),e("code",[v._v("QUIC")]),v._v("按序（"),e("code",[v._v("offset")]),v._v("顺序）发送"),e("code",[v._v("29-36")]),v._v("的数据包：")])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202202212148196.jpg",alt:"img"}})]),v._v(" "),e("ol",[e("li",[e("code",[v._v("31")]),v._v("、"),e("code",[v._v("32")]),v._v("、"),e("code",[v._v("34")]),v._v("数据包先到达，基于"),e("code",[v._v("offset")]),v._v("被优先乱序确认，但"),e("code",[v._v("30")]),v._v("数据包没有确认，所以当前已提交的字节偏移量不变，缓存区不变。")])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202202212148853.jpg",alt:"img"}})]),v._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("code",[v._v("30")]),v._v("到达并确认，缓存区收缩到阈值，接收方发送"),e("code",[v._v("MAX_STREAM_DATA frame")]),v._v("（协商缓存大小的特定帧）给发送方，请求增长最大绝对字节偏移量。")])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202202212148337.jpg",alt:"img"}})]),v._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[v._v("协商完毕后最大绝对字节偏移量右移，缓存区变大，同时发送方发现数据包"),e("code",[v._v("33")]),v._v("超时")])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202202212149171.jpg",alt:"img"}})]),v._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[v._v("发送方将超时数据包重新编号为"),e("code",[v._v("42")]),v._v("继续发送")])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/duochizhacai/generatePic/img/202202212149800.jpg",alt:"img"}})]),v._v(" "),e("p",[v._v("以上就是最基本的数据包发送-接收过程，控制数据发送的唯一限制就是最大绝对字节偏移量，该值是接收方基于当前已经提交的偏移量（连续已确认并向上层应用提交的数据包"),e("code",[v._v("offset")]),v._v("）和发送方协商得出。")])])}),[],!1,null,null,null);_.default=s.exports}}]);