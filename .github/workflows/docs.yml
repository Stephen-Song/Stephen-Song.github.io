# name: Crucials

# on:
#   # 每当 push 到 main 分支时触发部署
#   push:
#     branches: [main]
#   # 手动触发部署
#   workflow_dispatch:

# jobs:
#   docs:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2
#         with:
#           # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录
#           fetch-depth: 0

#       - name: Setup Node.js
#         uses: actions/setup-node@v1
#         with:
#           # 选择要使用的 node 版本
#           node-version: '14'

#       # 缓存 node_modules
#       - name: Cache dependencies
#         uses: actions/cache@v2
#         id: yarn-cache
#         with:
#           path: |
#             **/node_modules
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-

#       # 如果缓存没有命中，安装依赖
#       - name: Install dependencies
#         if: steps.yarn-cache.outputs.cache-hit != 'true'
#         run: yarn --frozen-lockfile

#       # 运行构建脚本
#       - name: Build VuePress site
#         run: npm run build

#       # 查看 workflow 的文档来获取更多信息
#       # @see https://github.com/crazy-max/ghaction-github-pages
#       - name: Deploy to GitHub Pages
#         uses: crazy-max/ghaction-github-pages@v2
#         with:
#           # 部署到 gh-pages 分支
#           target_branch: gh-pages
#           # 部署目录为 VuePress 的默认输出目录
#           build_dir: docs/.vuepress/dist
#         env:
#           # @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
#           GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
name: Crucials Blog
on:
  #监听push操作
  push:
    branches:
      # mian分支，你也可以改成其他分支
      - main
jobs:
  # 任务ID
  build:
    # 运行环境
    runs-on: ubuntu-latest
    # 步骤
    steps:
    # 使用别人的action
    - uses: actions/checkout@v2
    # 步骤名称
    - name: npm install
      # 步骤执行指令
      run: npm install
    - name: npm run build
      run: npm run build
    # 命名这个任务为发布Deploy
    - name: Deploy
      # 因为构建之后，需要把代码上传到服务器上，所以需要连接到ssh，并且做一个拷贝操作
      uses: cross-the-world/scp-pipeline@master
      env:
        WELCOME: "ssh scp ssh pipelines"
        LASTSSH: "Doing something after copying"
      with:
        host: ${{ secrets.USER_HOST }}
        user: ${{ secrets.USER_NAME }}
        pass: ${{ secrets.USER_PASS }}
        connect_timeout: 10s
        local: './public/*'
        remote: /www/server/public
      # 2、部署到 GitHub Pages
    - name: Deploy-GitHub
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        REPOSITORY_NAME: duochizhacai/duochizhacai.github.io
        BRANCH: main
        FOLDER: public